function getPageTitle() {
  var title = document.title;
  if (title.length > 0) {
    return title.toLowerCase().split(" ").join("-");
  }
  return null;
}

function getPageUrl() {
  return window.location.href.split("?")[0];
}

function getPageDetail() {
  var pageTitles = "";
  $("h1").each(function () {
    var h1Title = $(this).text().trim().toLowerCase().split(" ").join("-");
    if (h1Title.length > 0 && h1Title != undefined) {
      pageTitles = h1Title + "," + pageTitles;
    }
  });
  if (pageTitles != undefined && pageTitles.length > 0) {
    return pageTitles.slice(0, -1);
  }
  return null;
}

function getBreadcrumb() {
  var breadcrumb = "";
  $(".breadcrumb li").each(function (i) {
    breadcrumb =
      breadcrumb +
      ">" +
      $(this).text().trim().toLowerCase().split(" ").join("-");
  });
  if (breadcrumb != undefined && breadcrumb.length > 0) {
    return breadcrumb.slice(1);
  }
  return null;
}

function getPageURLQueryString() {
  var urlParams = location.search;
  if (urlParams != undefined && urlParams.length > 0) {
    return urlParams;
  }
  return null;
}

function getRandNumber() {
  return Math.floor(100000 + Math.random() * 900000);
}

function getDateTime() {
  return new Date().getTime();
}

function generateSessionId() {
  var sessionIdentifier = "a" + getRandNumber() + getDateTime();
  return sessionIdentifier;
}

function getSessionId() {
  var sessionId = sessionStorage.getItem("sessionId");
  if (sessionId == null || sessionId == undefined) {
    sessionStorage.setItem("sessionId", generateSessionId());
    sessionId = sessionStorage.getItem("sessionId");
  }
  return sessionId;
}

function getPageVanityURL() {
  var vanityUrl = window.location.pathname;
  if (vanityUrl != undefined && vanityUrl.length > 0) {
    return vanityUrl.replace(".html", "");
  }
  return null;
}

function getReferrer() {
  var referrer = document.referrer;
  return referrer;
}

function getReplicatedDate() {
  var replicatedDate = $("#replicated-date").val();
  if (replicatedDate != undefined && replicatedDate.length > 0) {
    return $("#replicated-date").val();
  }
  return null;
}

function getPageLanguage() {
  return $("html").attr("lang");
}

function getCategoryDetails(level) {
  var categoryType = getPageVanityURL().split("/");
  if (categoryType.length > level) {
    return categoryType[level];
  }
  return null;
}

function getCategoryType() {
  var categoryType = getPageVanityURL().split("/");
  if (categoryType != null) {
    return categoryType[1];
  }
  return null;
}

function getFormName() {
  var contactFormName = $(".contactus__form h2").text();
  var prescriptionFormName = $(".discount-prescription-card-form h2").text();
  var formName = [];
  if (contactFormName != undefined && contactFormName.length > 0) {
    formName.push(contactFormName.trim().toLowerCase().split(" ").join("-"));
  }
  if (prescriptionFormName != undefined && prescriptionFormName.length > 0) {
    formName.push(
      prescriptionFormName.trim().toLowerCase().split(" ").join("-")
    );
  }
  if (formName.length > 0) {
    return formName;
  }
  return null;
}

function getFormType() {
  var contactFormType = $(".contactus__form");
  var prescriptionFormType = $(".discount-prescription-card-form");
  var formType = [];
  if (contactFormType.length > 0 && contactFormType != undefined) {
    formType.push("Feedback");
  }
  if (prescriptionFormType.length > 0 && prescriptionFormType != undefined) {
    formType.push("Services");
  }
  if (formType.length > 0) {
    return formType;
  }
  return null;
}

function getFormErrors() {
  var prescriptionFirstNameErr = $(
    ".discount-prescription-card-form #firstname-error"
  ).text();
  var prescriptionLastNameErr = $(
    ".discount-prescription-card-form #lastname-error"
  ).text();
  var prescriptionEmailErr = $(
    ".discount-prescription-card-form #email-error"
  ).text();
  var contactFirstNameErr = $(".contactus__form #First_Name-error").text();
  var contactLastNameErr = $(".contactus__form #Last_Name-error").text();
  var contactEmailErr = $(".contactus__form #Email_Address-error").text();
  var contactPhoneErr = $(".contactus__form #Daytime_Phone-error").text();
  var formErrors = [];
  if (
    prescriptionFirstNameErr != undefined &&
    prescriptionFirstNameErr.length > 0
  ) {
    formErrors.push(prescriptionFirstNameErr.trim());
  }
  if (
    prescriptionLastNameErr != undefined &&
    prescriptionLastNameErr.length > 0
  ) {
    formErrors.push(prescriptionLastNameErr.trim());
  }
  if (prescriptionEmailErr != undefined && prescriptionEmailErr.length > 0) {
    formErrors.push(prescriptionEmailErr.trim());
  }
  if (contactFirstNameErr != undefined && contactFirstNameErr.length > 0) {
    formErrors.push(contactFirstNameErr.trim());
  }
  if (contactLastNameErr != undefined && contactLastNameErr.length > 0) {
    formErrors.push(contactLastNameErr.trim());
  }
  if (contactEmailErr != undefined && contactEmailErr.length > 0) {
    formErrors.push(contactEmailErr.trim());
  }
  if (contactPhoneErr != undefined && contactPhoneErr.length > 0) {
    formErrors.push(contactPhoneErr.trim());
  }
  if (formErrors.length > 0) {
    return formErrors;
  }
  return null;
}

function getFormErrorsPercentage(count) {
  if (digitalData["formInfo"]["formType"] == "Services") {
    var percentage = (count / 3) * 100;
    return percentage.toFixed();
  }
  if (digitalData["formInfo"]["formType"] == "Feedback") {
    var percentage = (count / 4) * 100;
    return percentage.toFixed();
  }
  return null;
}

function getCalculatorCategory() {
  var calcCategoryList = [];
  $(".financial-calculator .heading-caption h2").each(function () {
    var calCategory = $(this).html();
    if (calCategory != undefined && calCategory.trim() != "") {
      var categoryList = calCategory.split(" ");
      calcCategoryList.push(
        categoryList[categoryList.length - 1]
          .trim()
          .toLowerCase()
          .split(" ")
          .join("-")
      );
    }
  });
  if (calcCategoryList.length > 0) {
    return calcCategoryList;
  }
  return null;
}

function getCalculatorTitles() {
  var calNames = [];
  $(".calculators--items__title").each(function () {
    calNames.push($(this).text().trim());
  });
  if (calNames.length == 0) {
    var standaloneCalc = $(".calculator--items h2").text();
    if (standaloneCalc != undefined && standaloneCalc.length > 0) {
      calNames.push(standaloneCalc.trim());
    }
  }
  if (calNames.length > 0) {
    return calNames;
  }
  return null;
}

function getCalculatorTypes() {
  var calcTypes = [];
  $(".calculators--items__content .cal-type").each(function () {
    calcTypes.push(this.value);
  });
  if (calcTypes.length == 0) {
    var calType = $(".cal-type");
    if (calType != undefined && calType.length > 0) {
      calcTypes.push(calType.val());
    }
  }
  if (calcTypes.length > 0) {
    return calcTypes;
  }
  return null;
}
var dcu = dcu || {};
dcu.site = dcu.site || {};

$(window).on("load", function () {
  digitalData = {};

  pageInfo = {};
  pageInfo["sessionIdentifier"] = getSessionId();
  pageInfo["pageTitle"] = getPageTitle();
  pageInfo["pageURL"] = getPageUrl();
  pageInfo["pageURLQueryString"] = getPageURLQueryString();
  pageInfo["pageDetail"] = getPageDetail();
  pageInfo["pageBreadCrumb"] = getBreadcrumb();
  pageInfo["pagePublishDate"] = getReplicatedDate();
  pageInfo["pageLanguage"] = getPageLanguage();
  pageInfo["pageVanityURL"] = getPageVanityURL();
  pageInfo["pageReferrer"] = getReferrer();

  userInfo = {};
  userInfo["loginStatus"] = "anonymous";

  categoryInfo = {};
  categoryInfo["categoryType"] = getCategoryType();
  categoryInfo["mainCategory"] = getCategoryDetails(2);
  categoryInfo["subCategory1"] = getCategoryDetails(3);
  categoryInfo["subCategory2"] = getCategoryDetails(4);
  categoryInfo["subCategory3"] = getCategoryDetails(5);

  formInfo = {};
  formInfo["formName"] = getFormName();
  formInfo["formType"] = getFormType();
  $(".form-submit").on("keypress click", function () {
    setTimeout(function () {
      digitalData["formInfo"]["formError"] = getFormErrors();
      var errCount = digitalData["formInfo"]["formError"].length;
      digitalData["formInfo"]["numberOfFormErrors"] = errCount;
      digitalData["formInfo"]["formErrorsPercentage"] = getFormErrorsPercentage(
        errCount
      );
      jsonObject = JSON.stringify(digitalData);
    }, 200);
  });
  $(".brand-header--nav__tertiary ul li")
    .eq(0)
    .on("click", function () {
      if (digitalData["formInfo"]["formName"] != null) {
        digitalData["formInfo"]["formName"].push("Login");
        digitalData["formInfo"]["formType"].push("Authentication");
      } else {
        var loginFormName = ["Login"];
        var loginFormType = ["Authentication"];
        digitalData["formInfo"]["formName"] = loginFormName;
        digitalData["formInfo"]["formType"] = loginFormType;
      }
      jsonObject = JSON.stringify(digitalData);
    });

  calculatorInfo = {};
  setTimeout(function () {
    calculatorInfo["calculatorName"] = getCalculatorTitles();
  }, 2000);
  calculatorInfo["calculatorCategory"] = getCalculatorCategory();
  calculatorInfo["calculatorType"] = getCalculatorTypes();

  digitalData["pageInfo"] = pageInfo;
  digitalData["categoryInfo"] = categoryInfo;
  digitalData["userInfo"] = userInfo;
  digitalData["formInfo"] = formInfo;
  digitalData["calculatorInfo"] = calculatorInfo;

  jsonObject = JSON.stringify(digitalData);
});
/** a JS file that shall be included */

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.navHeight = function () {
  var _notificationHeight = $(".notification-alert"),
    _notifAlertHei = !_notificationHeight.attr("style")
      ? _notificationHeight.outerHeight()
      : 0,
    _brandHeaderHeight = $(".brand-header--navbar").hasClass("sticky")
      ? $(".brand-header--navbar.sticky").outerHeight()
      : $(".brand-header--nav__tertiary").outerHeight(),
    _topPos =
      $(".brand-header--navbar").hasClass("sticky") &&
      !_notificationHeight.attr("style")
        ? _brandHeaderHeight
        : _brandHeaderHeight + _notifAlertHei;
  if ($(window).outerWidth() <= 992) {
    _topPos = $(".mob--nav__header").hasClass("sticky")
      ? $(".mob--nav__header").outerHeight()
      : $(".mob--nav__header").outerHeight() +
        (_notificationHeight.length > 0 ? _notifAlertHei : 0);
  } else {
    return _topPos;
  }
  return _topPos;
};
dcu.site.ieDetect = function () {
  var sBrowser,
    sUsrAg = navigator.userAgent;
  // The order matters here, and this may report false positives for unlisted browsers.
  if (sUsrAg.indexOf("Firefox") > -1) {
    sBrowser = "Mozilla Firefox";
    // "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0"
  } else if (sUsrAg.indexOf("Opera") > -1 || sUsrAg.indexOf("OPR") > -1) {
    sBrowser = "Opera";
    //"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 OPR/57.0.3098.106"
  } else if (sUsrAg.indexOf("Trident") > -1) {
    sBrowser = "Microsoft Internet Explorer";
    // "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; Zoom 3.6.0; wbx 1.0.0; rv:11.0) like Gecko"
  } else if (sUsrAg.indexOf("Edge") > -1) {
    $("body").addClass("edge");
    sBrowser = "Microsoft Edge";
    // "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299"
  } else if (sUsrAg.indexOf("Chrome") > -1) {
    sBrowser = "Google Chrome or Chromium";
    // "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.181 Chrome/66.0.3359.181 Safari/537.36"
  } else if (sUsrAg.indexOf("Safari") > -1) {
    sBrowser = "Apple Safari";
    // "Mozilla/5.0 (iPhone; CPU iPhone OS 11_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1 980x1306"
  } else {
    sBrowser = "unknown";
  }
};
dcu.site.scrollHideShow = function (_val) {
  function preventDefault(e) {
    e.preventDefault();
  }
  if (_val === "enable") {
    return document.body.removeEventListener("touchmove", preventDefault, {
      passive: false,
    });
  } else if (_val === "disable") {
    return document.body.addEventListener("touchmove", preventDefault, {
      passive: false,
    });
  }
};

dcu.site.siteLeaveMessageShow = function () {
  var inputs = $("input[id*='externalURL-']");
  var externalURL = $("#externalURL").val().trim(),
    hosts,
    url = "",
    compareURL,
    siteLeaveId,
    openSiteLeaveModal;
  if (externalURL === "") {
    return false;
  }
  hosts = externalURL.split(",");
  compareURL = function (url, hosts, currLink, siteLeaveId) {
    var currentHost;
    var isOpened = false;
    var urlPath = url
      .toLowerCase()
      .replace("http://", "")
      .replace("https://", "")
      .replace("www.", "");
    var urldomain = urlPath.split(/[/?#]/)[0];
    $.each(hosts, function (i) {
      currentHost = hosts[i].trim();
      if (
        currentHost != undefined &&
        currentHost != null &&
        currentHost != ""
      ) {
        var currentHostpath = currentHost
          .toLowerCase()
          .replace("http://", "")
          .replace("https://", "")
          .replace("www.", "");
        var currentHostdomain = currentHostpath.split(/[/?#]/)[0];
        if (urldomain === currentHostdomain) {
          currLink.addClass("external-url");
          currLink.click(function (e) {
            e.preventDefault();
            // openSiteLeaveModal($(this).attr("href"));
            isOpened = true;
          });
          return false;
        }
      }
    });
    if (inputs.length >= 1) {
      $.each(inputs, function (x) {
        externalURL = inputs[x].value.trim();
        hosts = externalURL.split(",");
        $.each(hosts, function (i) {
          currentHost = hosts[i].trim();
          if (
            currentHost != undefined &&
            currentHost != null &&
            currentHost != ""
          ) {
            var currentHostpath = currentHost
              .toLowerCase()
              .replace("http://", "")
              .replace("https://", "")
              .replace("www.", "");
            var currentHostdomain = currentHostpath.split(/[/?#]/)[0];
            if (urldomain === currentHostdomain) {
              currLink.addClass("external-url");
              currLink.click(function (e) {
                siteLeaveId = x;
                if (isOpened == false) {
                  e.preventDefault();
                  openSiteLeaveModal($(this).attr("href"), siteLeaveId);
                } else if (urlPath === currentHostpath) {
                  e.preventDefault();
                  openSiteLeaveModal($(this).attr("href"), siteLeaveId);
                  isOpened = false;
                }
              });
              return false;
            }
          }
        });
      });
    }
    currLink.click(function (e) {
      if (isOpened == true) {
        openSiteLeaveModal($(this).attr("href"));
      }
    });
  };
  openSiteLeaveModal = function (destURL, siteLeaveId) {
    $("#siteLeave").on("show.bs.modal", function (event) {
      var modal = $(this),
        siteLeaveMsgBody = modal.find(".modal-body p"),
        continueLink = modal.find(".continue-link");
      if (siteLeaveId != undefined) {
        siteLeavemsg = $("#siteLeaveInput-" + siteLeaveId).val();
      } else {
        siteLeavemsg = $("#siteLeaveInput").val();
      }
      siteLeaveMsgBody.text(siteLeavemsg);
      continueLink.attr("href", destURL);
      document
        .getElementById("site-leave-continue-link")
        .addEventListener("click", function (e) {
          $("#siteLeave").modal("hide");
          e.stopPropagation();
        });
    });
    $("#siteLeave").modal({
      show: true,
      backdrop: "static",
      focus: true,
    });
  };
  $("a").each(function (index) {
    var queryStringIndex;
    url = String($(this).attr("href"));
    queryStringIndex = url.indexOf("?");
    if (queryStringIndex != -1) {
      url = url.substring(0, queryStringIndex);
    }
    compareURL(url, hosts, $(this));
  });
};

dcu.site.generateComponentDynamicId = function (element, isAccordion, isTab) {
  var _ele = element;

  if (isAccordion) {
    _ele.each(function (i) {
      var _this = $(this),
        _eleItemContent,
        currId = _this.attr("id"),
        currNewId = currId + "-" + i;

      _this.attr("id", currNewId);
      if (_this.find(".js-nested-accordion").length) {
        _eleItemContent = _this.find(".resource__item__content");
      } else {
        _eleItemContent = _this.find("[data-parent]");
      }
      _eleItemContent.each(function (j) {
        var currTargetId = $(this).attr("id"),
          currTarget,
          currItemTitle;
        if (_this.find(".js-nested-accordion").length) {
          currTarget = currTargetId + j + "-" + i;
          currItemTitle = _this.find(
            "[data-target='#" + currTargetId + j + "']"
          );
        } else {
          currTarget = currTargetId + "-" + i;
          currItemTitle = _this.find("[data-target='#" + currTargetId + "']");
        }
        if (!$(this).hasClass("multi-collapse")) {
          $(this).attr("data-parent", "#" + currNewId);
        }

        $(this).attr("id", currTarget);
        $(this).attr("aria-labelledby", currTarget);
        currItemTitle.attr("data-target", "#" + currTarget);
        currItemTitle.attr("aria-controls", currTarget);
      });
    });
  } else if (isTab && _ele.length > 1) {
    _ele.each(function (i) {
      var _this = $(this),
        currTabContent = _this.find("[role='tabpanel']");
      currTabContent.each(function () {
        var currTargetId = $(this).attr("id"),
          currTarget = currTargetId + "-" + i,
          currItemTab = _this.find("[href='#" + currTargetId + "']"),
          currItemTabNewId = currItemTab.attr("id") + "-" + i;
        $(this).attr("id", currTarget);
        $(this).attr("aria-labelledby", currTarget);
        currItemTab.attr("href", "#" + currTarget);
        currItemTab.attr("aria-controls", currTarget);
        currItemTab.attr("id", currItemTabNewId);
      });
    });
  }
};

$(document).ready(function () {
  $(".skip-main").on("click keydown", function () {
    var skipTo = "#" + this.href.split("#")[1];
    $(skipTo)
      .attr("tabindex", -1)
      .on("blur focusout", function () {
        $(this).removeAttr("tabindex");
      })
      .focus();
  });
  var isChatDisabled = $(".contactBanner .plp-contact-banner").data(
    "ischatdisabled"
  );

  if (isChatDisabled || isChatDisabled == undefined) {
    $(".brand-footer--tier__contact > ul > li:last-child").hide();
  }
  if ($("#siteLeave").length) {
    dcu.site.siteLeaveMessageShow();
  }
  dcu.site.ieDetect();
  // Adding role="main" to body portion where all components except footer and header are placed.
  $(".root > .aem-Grid > .responsivegrid > .aem-Grid").attr("role", "main");
  $(".xf-master-building-block").each(function () {
    if ($(this).find(".footerNavigation").length === 0) {
      $(this).removeAttr("role");
    }
  });
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.brandheader = function () {
  stickyNav();
  var mobnavWrapper = $(".mob--nav__navblock");
  var is_iPad = navigator.userAgent.match(/iPad/i) != null;
  if (is_iPad) {
    $("body").addClass("iPad");
  }
  $(window).on("scroll", function () {
    mobnavWrapper.css("top", dcu.site.navHeight());
  });
  mobnavWrapper.css("top", dcu.site.navHeight());
  $(window).on("scroll", function () {
    var scroll = $(window).scrollTop();
    if (scroll >= 48) {
      if (!$(".mob--nav__navblock").is(":visible")) {
        $(".mob--nav__header").addClass("sticky");
      }
    } else {
      $(".mob--nav__header").removeClass("sticky");
      $(".mob--nav__navblock").removeClass("mob-mega-fixed");
    }
  });

  $(".mob-nav-icon").on("click", function () {
    $(this).addClass("nav-hidden");
    $(".mob--nav__navblock").animate(
      {
        width: "show",
      },
      800
    );
    $(".mob-nav-close-icon").removeClass("nav-hidden");
    $("body").addClass("no-scroll");
    if ($(".brand-header--level-2--con").hasClass("active")) {
      $(".brand-header--level-2--con").removeClass("active").show();
    }
    if ($(".login-form").is(":visible")) {
      $(".login-form").hide();
    }
    dcu.site.scrollHideShow("enable");
    $(".link-list > .title > a").attr("href", "javascript:;");
    mobnavWrapper.css("top", dcu.site.navHeight());
    $(".mob--nav__navblock__levelOne > ul").width($(window).width());
  });
  $(".mob-nav-close-icon").on("click", function () {
    $(".mob-nav-close-icon").addClass("nav-hidden");
    $(".mob--nav__navblock").animate({
      width: "hide",
    });
    $(".mob-nav-icon").removeClass("nav-hidden");
    $("body").removeClass("no-scroll");
    dcu.site.scrollHideShow("enable");
    $(".brand-header--level-2--con").removeClass("active");
    $(".link-list__items").hide();
    $(".title").removeClass("title-mob-minus");
    mobnavWrapper.css("top", dcu.site.navHeight());
    $(".link-list").removeClass("link-list-opened");
  });

  function toggleTitles($titles) {
    $titles.toggleClass("title-mob-minus"); // This is for icon
    $titles.next().slideToggle();
    $titles.parent().toggleClass("link-list-opened");
  }
  var $allTitles = $(".title").on("click", function (e) {
    var ww = $(window).width();
    if (ww < 992) {
      e.preventDefault();
      toggleTitles($allTitles.not(this).filter(".title-mob-minus"));
      toggleTitles($allTitles.not(this).filter(".link-list-opened"));
      toggleTitles($(this));
    }
  });
  function anchorSetPosition() {
    var getLocation = window.location.hash,
      stickyNavHeight = 0,
      navHeaderHeight = $(".brand-header").outerHeight(),
      navmobheader = $(".mob--nav__header").outerHeight(),
      nonstickyPos = 0,
      nonstickyPosMob = 0,
      isIE11 = !!navigator.userAgent.match(/Trident.*rv\:11\./);
    if ($(".sticky-navbar").length !== 0) {
      stickyNavHeight = $(".sticky-navbar").outerHeight();
      nonstickyPos = stickyNavHeight + navHeaderHeight + 32;
      nonstickyPosMob = stickyNavHeight + navmobheader + 90;
    } else {
      stickyNavHeight = $(".brand-header--navbar").outerHeight();
      nonstickyPos = navHeaderHeight + stickyNavHeight / 4;
      nonstickyPosMob = navmobheader;
    }
    function gotoHash(id) {
      var timer;
      if (isIE11) {
        timer = 1000;
      } else {
        timer = 0;
      }
      setTimeout(function () {
        var $target = $(id),
          scrollOffset;
        if ($(".sticky-navbar--fixed").length) {
          scrollOffset = $target.offset().top - 2.6 * stickyNavHeight;
          if ($(window).outerWidth() <= 992) {
            scrollOffset = $target.offset().top - (stickyNavHeight + 40);
          }
        } else if (
          $(".brand-header--navbar.sticky").length &&
          $(".sticky-navbar").length < 1
        ) {
          if ($(window).outerWidth() <= 992) {
            scrollOffset = $target.offset().top - navmobheader;
          } else if (
            $(window).outerWidth() > 992 &&
            $(window).outerWidth() <= 1100
          ) {
            scrollOffset = $target.offset().top;
          } else {
            scrollOffset = $target.offset().top - (stickyNavHeight - 8);
          }
        } else {
          if ($(window).outerWidth() <= 992) {
            scrollOffset = $target.offset().top - nonstickyPosMob;
          } else if (
            $(window).outerWidth() > 992 &&
            $(window).outerWidth() <= 1100
          ) {
            if ($(".sticky-navbar").length) {
              scrollOffset = $target.offset().top - nonstickyPos;
            } else {
              scrollOffset = $target.offset().top;
            }
          } else {
            scrollOffset = $target.offset().top - nonstickyPos;
          }
        }
        scrollOffset = Math.round(scrollOffset);

        if (isIE11) {
          $("body, html").animate(
            {
              scrollTop: scrollOffset,
            },
            500
          );
        } else {
          window.scrollTo(0, scrollOffset);
        }
      }, timer);
    }

    if (getLocation && $(getLocation).length) {
      gotoHash(getLocation);
    }
  }
  /*$(window).on("scroll", function() {
        var scroll = $(window).scrollTop();
        if (scroll >= 40) {
            if ($("body").hasClass("iPad")) {
                return;
            }
            $(".brand-header--navbar").addClass("sticky");
            $(".brand-header--nav__tertiary")
                .addClass("sticky-login")
                .css(
                    "right",
                    ($(window).outerWidth() -
                        $(".brand-header--navbar .container").outerWidth()) /
                        2
                );
            if ($(".brand-header--navbar").hasClass("sticky")) {
                if (!$("body").hasClass("no-scroll")) {
                    $(".brand-header--level-2--con").addClass("megasub-sticky");
                }
            }
        } else {
            $(".brand-header--navbar").removeClass("sticky");
            $(".brand-header--level-2--con").removeClass("megasub-sticky");
            $(".brand-header--nav__tertiary")
                .removeClass("sticky-login")
                .css("right", 0); 
        }
        mobnavWrapper.css("top", dcu.site.navHeight());
    });*/
  function stickyNav() {
    var el = $(".brand-header");
    var mega = $(".brand-header--level-2--con");
    var pos = el.position();
    var windowpos = $(window).scrollTop();
    if (windowpos > pos.top) {
      el.addClass("sticky-brand");
    } else {
      el.removeClass("sticky-brand");
    }
    if (mega != undefined) {
      var pos2 = mega.position();
      if (pos2 != undefined) {
        if (windowpos > pos2.top) {
          mega.addClass("sticky-mega-navigation");
        } else {
          mega.removeClass("sticky-mega-navigation");
        }
      }
    }
  }
  $(window).on("scroll", function () {
    stickyNav();
  });

  if ($(window).outerWidth() <= 992) {
    $(".brand-header").addClass("hidden");
    $(".mob--nav").removeClass("hidden");
  } else {
    $(".brand-header").removeClass("hidden");
    $(".mob--nav").addClass("hidden");
  }

  $(".mob--nav__navblock__levelTwo, .mob--nav__navblock__levelThree").width(
    $(window).width()
  );
  $(window).on("resize load", function () {
    if ($(".brand-header--nav__tertiary").length) {
      var scroll = $(window).scrollTop();
      if (scroll >= 40) {
        if ($("body").hasClass("iPad")) {
          return;
        }
        /* $(".brand-header--nav__tertiary")
                    .addClass("sticky-login")
                    .css(
                        "right",
                        ($(window).outerWidth() -
                            $(
                                ".brand-header--navbar .container"
                            ).outerWidth()) /
                            2
                    );*/
      } else {
        /*  $(".brand-header--nav__tertiary")
                    .removeClass("sticky-login")
                    .css("right", 0);*/
      }
    }
    if ($(window).outerWidth() <= 992) {
      $(".brand-header").addClass("hidden");
      if ($(".brand-header--level-2--con").hasClass("active")) {
        $(".mob-nav-icon").addClass("nav-hidden");
        $(".mob-nav-close-wrap").removeClass("nav-hidden");
        mobnavWrapper.show();
      }
      $(".mob--nav").removeClass("hidden");
    } else {
      $(".brand-header").removeClass("hidden");
      $(".mob--nav").addClass("hidden");
      $(".mob-nav-icon").removeClass("nav-hidden");
      $(".mob-nav-close-wrap").addClass("nav-hidden");
      mobnavWrapper.hide();
      if ($(".brand-header--level-2--con.active").length === 0) {
        $("body").removeClass("no-scroll");
      }
    }
    mobnavWrapper.css("top", dcu.site.navHeight());
    $(".mob--nav__navblock__levelTwo, .mob--nav__navblock__levelThree").width(
      $(window).width()
    );
    $(".mob--nav__navblock__levelOne > ul").width($(window).width());
  });
  anchorSetPosition();
  $(window).on("resize orientationchange", function () {
    anchorSetPosition();
  });
};
$(document).ready(function () {
  if ($(".brand-header").length) {
    dcu.site.brandheader();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.communityCarousel = function () {
  var $communityCarousel = $(".community-carousel"),
    isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent),
    $exploreBtn = $communityCarousel.find(".explore-btn"),
    $sliderItem = $communityCarousel.eq(0).find(".slider-item"),
    $sliderItemWidth = $sliderItem.outerWidth(),
    $sliderControlsCentered = $communityCarousel.find(
      ".slider-controls-centered"
    ),
    $next = $communityCarousel.find(".next"),
    $previous = $communityCarousel.find(".previous"),
    $progressBarCentered = $communityCarousel.find(".progress"),
    sliderControls,
    showHideControls,
    setExploreButtonWidth,
    progressBar;

  sliderControls = function ($sliderItemWidth) {
    var progressBarWidth,
      currWindowWidth = $(window).outerWidth();

    $sliderControlsCentered.css({ width: $sliderItemWidth });
    if (currWindowWidth >= 993) {
      progressBarWidth =
        $sliderControlsCentered.width() -
        ($next.outerWidth() + $previous.outerWidth());
    } else {
      progressBarWidth = $sliderControlsCentered.width();
    }
    $progressBarCentered.css({
      width: progressBarWidth,
    });
  };
  showHideControls = function ($sliderItem, $sliderControlsCentered) {
    if ($sliderItem.length < 2) {
      $sliderControlsCentered.addClass("invisible");
    }
  };
  setExploreButtonWidth = function () {
    var exploreButtonWidth,
      currWindowWidth = $(window).outerWidth();
    if (currWindowWidth >= 993) {
      exploreButtonWidth = "auto";
    } else {
      exploreButtonWidth = $sliderItem.outerWidth();
    }
    $exploreBtn.css({
      width: exploreButtonWidth,
    });
  };
  progressBar = function (
    $sliderCentered,
    $progressBarCentered,
    $progressBarLabelCentered
  ) {
    $sliderCentered.on(
      "beforeChange",
      function (event, slick, currentSlide, nextSlide) {
        var calc = (nextSlide / (slick.slideCount - 1)) * 100;
        $progressBarCentered
          .css("background-size", calc + "% 100%")
          .attr("aria-valuenow", calc);
        $progressBarLabelCentered.text(calc + "% completed");
      }
    );
  };

  $communityCarousel.each(function (i) {
    var _this = $(this),
      $currSliderCentered = _this.find(".slider-centered"),
      $currProgressBarCentered = _this.find(".progress"),
      $currProgressBarLabelCentered = _this.find(
        ".slider__label",
        ".slider-controls-centered"
      ),
      $currSliderControlsCentered = _this.find(".slider-controls-centered"),
      $currSliderItem = _this.find(".slider-item"),
      $currNext = _this.find(".next"),
      $currPrevious = _this.find(".previous"),
      slickOptions = {
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 400,
        prevArrow: $($currPrevious, $currSliderControlsCentered),
        nextArrow: $($currNext, $currSliderControlsCentered),
        centerMode: true,
        mobileFirst: true,
        centerPadding: "25px",
        responsive: [
          {
            breakpoint: 992,
            settings: {
              centerPadding: "90px",
            },
          },
        ],
      };
    $currSliderCentered.slick(slickOptions);
    showHideControls($currSliderItem, $currSliderControlsCentered);

    progressBar(
      $currSliderCentered,
      $currProgressBarCentered,
      $currProgressBarLabelCentered
    );
  });
  sliderControls($sliderItemWidth);
  setExploreButtonWidth();
  $(window).on("load resize orientationchange", function () {
    var timeLag;
    if (isMobile) {
      timeLag = 0;
    } else {
      timeLag = 300;
    }
    setTimeout(function () {
      var $sliderItemWidth = $sliderItem.outerWidth();
      sliderControls($sliderItemWidth);
      setExploreButtonWidth();
    }, timeLag);
  });
};

$(document).ready(function () {
  if ($(".community-carousel").length) {
    dcu.site.communityCarousel();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.notification = function () {
  var elem = $(".notification-alert");
  var closeElem = $(".alert_close");
  closeElem.click(function () {
    elem.slideUp(600);
  });
  dcu.site.navHeight();
};
$(document).ready(function () {
  if ($(".notification-alert").length) {
    dcu.site.notification();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.bannerSlider = function () {
  var _heroSlider = $(".hero-banner-slider");
  var fadeIn = $(_heroSlider).attr("data-slider-type") == "fade" ? true : false;
  var enaleDots =
    $(_heroSlider).attr("data-slider-dots") == "true" ? true : false;
  var autoPlaySpeed = $(_heroSlider).attr("data-slider-time");
  if (
    autoPlaySpeed == undefined ||
    autoPlaySpeed == null ||
    autoPlaySpeed == "" ||
    autoPlaySpeed == " "
  ) {
    autoPlaySpeed = 7000;
  } else {
    autoPlaySpeed = autoPlaySpeed * 1000;
  }
  _heroSlider.slick({
    infinite: true,
    accessibility: true,
    speed: 1200,
    slidesToShow: 1,
    adaptiveHeight: false,
    dots: enaleDots,
    autoplay: true,
    autoplaySpeed: autoPlaySpeed,
    pauseOnFocus: true,
    pauseOnHover: true,
    fade: fadeIn,
    cssEase: "linear",
    responsive: [
      {
        breakpoint: 992,
        settings: {
          arrows: false,
          pauseOnFocus: true,
          pauseOnHover: true,
        },
      },
    ],
  });

  var btn = $("#hero-carousel-activate");
  btn.on("click", function (e) {
    btn.toggleClass("play");
    checkState();
  });
  btn.on("keydown", function (e) {
    if (e.which === 13) {
      btn.toggleClass("play");
      checkState();
    }
  });
  $(".hero-banner-slider .slick-next,.hero-banner-slider .slick-prev").on(
    "click",
    function (e) {
      if (!btn.hasClass("play")) {
        btn.toggleClass("play");
      }
    }
  );
  $(".hero-banner-slider .slick-next,.hero-banner-slider .slick-prev").on(
    "keydown",
    function (e) {
      if (e.which === 13) {
        if (!btn.hasClass("play")) {
          btn.toggleClass("play");
        }
      }
    }
  );
  function checkState() {
    if (btn.hasClass("play")) {
      _heroSlider.slick("slickPause");
      btn.attr("title", "Play").attr("aria-label", "Play");
    } else {
      _heroSlider.slick("slickPlay");
      btn.attr("title", "Pause").attr("aria-label", "Pause");
    }
  }
  _heroSlider.on("afterChange", function () {
    if ($(".slick-current").hasClass("video")) {
      var video = $(".slick-current.video").find("video").get(0);
      var playPromise = video.play();

      if (playPromise !== undefined) {
        playPromise
          .then(function () {
            //video.play();
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }
  });
  /*_heroSlider.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
    var i, vd = $('.video').find('video');
    for (i = 0; i < vd.length; i++) {
      if (!vd.get(i).paused) {
        //vd.get(i).pause();
      }
    }
  });*/
};
$(document).ready(function () {
  if ($(".hero-banner-slider").length) {
    dcu.site.bannerSlider();
  }
});
$(window).on("load", function () {
  if ($(".hero-banner-slider").length) {
    $(".hero-banner-slider").removeClass("loading");
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.loginForm = function () {
  var _close = $(".close"),
    _loginForm = $(".login-form"),
    _carouselButton = $("#hero-carousel-activate"),
    _heroSlider = $(".hero-banner-slider"),
    _winw = $(window).width(),
    _navOpenElem =
      $(window).outerWidth() > 992
        ? $(".brand-header--nav__tertiary ul li a:eq(0)")
        : $(".mob--nav__header__right > .app-primary"),
    _rightVal =
      $(window).outerWidth() > 992
        ? ($(window).outerWidth() -
            $(".brand-header--navbar .container").outerWidth()) /
            2 +
          10
        : 0,
    typed = false,
    firstTimeVisit = false;
  _close.on("click", function () {
    _loginForm.slideUp(300, function () {
      _navOpenElem.focus();
      _heroSlider.slick("slickPlay");
      if (_carouselButton.hasClass("play")) {
        _carouselButton.toggleClass("play");
      }
      // focus on credit union if user visited first time and closes login modal
      if (firstTimeVisit) {
        $(".brand-header--nav__primary a").first().focus();
        firstTimeVisit = false;
      }
    });
    $(".modal-overlay").remove();
  });
  $("#memberNumber").on("keyup", function () {
    typed = true;
  });
  var setTabbing = function () {
    var loginInput = _loginForm.find("input, button, a").filter(":visible"),
      firstInputElement = loginInput.first(),
      lastInputElement = loginInput.last(),
      firstTextInputElement = loginInput.find("input[type=text]").first();

    firstTextInputElement.focus();

    lastInputElement.on("keydown", function (e) {
      if (e.which === 9 && !e.shiftKey) {
        e.preventDefault();
        firstInputElement.focus();
      }
    });

    firstInputElement.on("keydown", function (e) {
      if (e.which === 9 && e.shiftKey) {
        e.preventDefault();
        lastInputElement.focus();
      }
    });
  };
  var _openLoginModal = function (isNewUser) {
    _loginForm
      .slideDown(100, function () {
        setTabbing();
      })
      .css({ top: dcu.site.navHeight(), right: _rightVal });
    if ($(".login-form").is(":visible")) {
      $("body").append('<div class="modal-overlay"></div>');
      _heroSlider.slick("slickPause");
      if (!_carouselButton.hasClass("play")) {
        _carouselButton.toggleClass("play");
      }
    }
    if ($(window).outerWidth() < 993) {
      $(".modal-overlay").css("top", dcu.site.navHeight());
      $(".close").focus();
      $(window).on("resize orientationchange", function () {
        $(".modal-overlay").css("top", dcu.site.navHeight());
      });
    } else {
      if (isNewUser && $(".cookie-policy-container").is(":visible")) {
        $(".cookie-policy-container .btn-tilt").focus();
      } else {
        $("#memberNumber").focus();
      }
    }
  };
  $(".alert_close").on("click", function () {
    _loginForm.css("top", dcu.site.navHeight());
  });
  $(window).on("resize orientationchange", function () {
    _navOpenElem =
      $(window).outerWidth() > 992
        ? $(".brand-header--nav__tertiary ul li a:eq(0)")
        : $(".mob--nav__header__right > .app-primary");
    _rightVal =
      $(window).outerWidth() > 992
        ? ($(window).outerWidth() -
            $(".brand-header--navbar .container").outerWidth()) /
            2 +
          10
        : 0;
    _navOpenElem.on("click", function (e) {
      e.preventDefault();
      _openLoginModal(false);
    });

    $(".modal-overlay").css("top", dcu.site.navHeight());
    _loginForm.css({ top: dcu.site.navHeight(), right: _rightVal });
  });
  if ($(window).outerWidth() < 720 && dcu.site.navHeight() > 50) {
    $(".login-form-wraper").addClass("top-notification-enabled");
  }
  var _closeLoginModal = function () {
    if ($(".login-form").is(":visible")) {
      $(".login-form").slideUp(600);
      if (_carouselButton.hasClass("play")) {
        _carouselButton.toggleClass("play");
        _heroSlider.slick("slickPlay");
      }
    }
    $(".modal-overlay").remove();
  };
  var _closeLoginModalAuto = function () {
    setTimeout(function () {
      if ($(".login-form:hover").length > 0 || typed) {
        typed = false;
        return false;
      }
      _closeLoginModal();
    }, 3000);
  };

  // FUNCTION TO TRIGGER LOGIN MODAL
  $(".login-instruction").on("click", function () {
    _openLoginModal();
  });

  var _setLogincookie = function () {
    var visited = Cookies.get("firstvisit");
    if (visited == "yes") {
      //Do nothing
    } else {
      $(window).on("load", function () {
        if (_winw > 992 && $(".loginModalCheck").length) {
          _openLoginModal(true);
        }
        //_closeLoginModalAuto();
      });
      firstTimeVisit = true;
      Cookies.set("firstvisit", "yes", { expires: 7, path: "/" });
    }
  };
  _navOpenElem.on("click", function (e) {
    e.preventDefault();
    if ($(".mob--nav__navblock").is(":visible")) {
      $(".mob--nav__navblock").hide();
    }
    if ($(".brand-header--level-2--con").hasClass("active")) {
      $(".brand-header--level-2--con.active").hide();
    }
    if ($(".mob-nav-close-icon").is(":visible")) {
      $(".mob-nav-close-icon").addClass("nav-hidden");
      $(".mob-nav-icon").removeClass("nav-hidden");
      $("body").removeClass("no-scroll");
    } else {
      $("body").removeClass("no-scroll");
    }
    _openLoginModal(false);
  });
  $(document).on("click", ".modal-overlay", function () {
    _closeLoginModal();
  });
  _setLogincookie();
};

$(document).ready(function () {
  if ($(".login-form").length) {
    dcu.site.loginForm();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.ratingStars = function () {
  var checkStarWidth = function (element) {
    var defaultStarWidth = 23,
      starWidth;
    if ($(window).width() <= 992) {
      starWidth = element.data("star-mobile-width") || defaultStarWidth;
    } else {
      starWidth = element.data("star-desktop-width") || defaultStarWidth;
    }
    return parseInt(starWidth);
  };
  $(window).on("resize orientationchange", function () {
    $("span.rating-stars").each(function () {
      var val = parseFloat($(this).data("value")),
        currentStarWidth = checkStarWidth($(this)),
        size = Math.max(0, Math.min(5, val)) * currentStarWidth;
      $(this).find("span").width(size);
    });
  });
  $("span.rating-stars").each(function () {
    var val = parseFloat($(this).html()),
      currentStarWidth = checkStarWidth($(this)),
      size = Math.max(0, Math.min(5, val)) * currentStarWidth,
      $span = $("<span />").width(size);
    $(this).html($span);
    $(this).attr("data-value", val);
  });
};

$(document).ready(function () {
  if ($("span.rating-stars").length) {
    dcu.site.ratingStars();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.benefitsOffers = function () {
  var $sliderControlsCentered = $(".benefits-offers .slider-controls-centered");
  if ($(window).outerWidth() <= 992) {
    excecuteCorousel();
    $sliderControlsCentered.show();
  } else {
    $sliderControlsCentered.hide();
  }
};
var excecuteCorousel = function () {
  var $benefitsOffers = $(".benefits-offers"),
    $progressBarCentered = $benefitsOffers.find(".progress"),
    $sliderControlsCentered = $benefitsOffers.find(".slider-controls-centered"),
    $sliderItem = $benefitsOffers.find(".slider-item");

  var sliderControls = function () {
    var progressBarWidth;

    $sliderControlsCentered.css({ width: $sliderItem.outerWidth() });
    progressBarWidth = $sliderItem.width();
    $progressBarCentered.css({
      width: progressBarWidth,
    });
  };

  var progressBar = function (
    $sliderCentered,
    $progressBarCentered,
    $progressBarLabelCentered
  ) {
    $sliderCentered.on(
      "beforeChange",
      function (event, slick, currentSlide, nextSlide) {
        var calc = ((nextSlide + 1) / slick.slideCount) * 100;
        $progressBarCentered
          .css("background-size", calc + "% 100%")
          .attr("aria-valuenow", calc);
        $progressBarLabelCentered.text(calc + "% completed");
      }
    );
  };
  $benefitsOffers.each(function () {
    var _this = $(this),
      $currSliderCentered = _this.find(".slider-centered"),
      $currProgressBarCentered = _this.find(".progress"),
      $currProgressBarLabelCentered = _this.find(
        ".slider__label",
        ".slider-controls-centered"
      ),
      $currSliderControlsCentered = _this.find(".slider-controls-centered"),
      $currNext = _this.find(".next"),
      $currPrevious = _this.find(".previous"),
      slickOptions = {
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 400,
        prevArrow: $($currPrevious, $currSliderControlsCentered),
        nextArrow: $($currNext, $currSliderControlsCentered),
        centerMode: true,
        infinite: false,
        mobileFirst: true,
        responsive: [
          {
            breakpoint: 320,
            settings: {
              slidesToShow: 1,
              slidesToScroll: 1,
            },
          },
          {
            breakpoint: 992,
            settings: "unslick",
          },
        ],
      };
    $currSliderCentered.not(".slick-initialized").slick(slickOptions);
    progressBar(
      $currSliderCentered,
      $currProgressBarCentered,
      $currProgressBarLabelCentered
    );
    sliderControls();
  });

  $progressBarCentered
    .css("background-size", "33% 100%")
    .attr("aria-valuenow", 33);

  $(window).on("resize orientationchange", function () {
    if ($(window).outerWidth() <= 992) {
      $sliderControlsCentered.show();
    } else {
      $sliderControlsCentered.hide();
    }
    setTimeout(function () {
      sliderControls();
    }, 200);
  });
};

function triggerBenefitsOffers() {
  if ($(".benefits-offers").length) {
    dcu.site.benefitsOffers();
  }
}

$(document).ready(triggerBenefitsOffers);
$(window).resize(triggerBenefitsOffers);

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.cookiepolicy = function () {
  var $con = $(".cookie-policy-container"),
    expiryDate = $con.attr("data-cookie-expiry"),
    isAgreed = false;
  var setCookie = function () {
    isAgreed = true;
    if (
      expiryDate == undefined ||
      expiryDate == null ||
      expiryDate == "" ||
      expiryDate == " "
    ) {
      expiryDate = 30;
    }
    Cookies.set("cookiepolicy", true, {
      expires: parseInt(expiryDate),
    });
    $con.slideUp(200);
    returnFocustoElement(".login-form", ".login-form #memberNumber");
  };
  var removeCookie = function () {
    isAgreed = false;
    $con.slideUp(200);
    returnFocustoElement(".login-form", ".login-form #memberNumber");
  };

  var returnFocustoElement = function (selector, focusableEle) {
    if ($(selector).is(":visible")) {
      $(focusableEle).focus();
    }
  };

  if (!$con.length) {
    return;
  }
  isAgreed = Cookies.get("cookiepolicy") || false;
  if (isAgreed) {
    $con.remove();
  } else {
    $con.css("display", "block");
    $con.find(".btn-tilt").on("click", setCookie);
    $con.find(".btn-border-tilt").on("click", removeCookie);
    $con.find(".cookie-policy__close").on("click", removeCookie);
  }
};

$(document).ready(function () {
  if ($(".cookie-policy-container").length) {
    dcu.site.cookiepolicy();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.megaNav = function () {
  var megaNavCon = $(".brand-header--navbar"),
    navClose = $(".nav-close"),
    notifCon = $(".notification-alert"),
    megaSubNav = $(".brand-header--level-2--con.active"),
    megaWrapper = $(".brand-header--level-2--con"),
    meganavitem = $(".mega-navigation--level-one > li"),
    megaOverlay = $(".menu-overlay"),
    brandHeaderSecondary = $(".brand-header--nav__secondary");

  //Animation on hover global nav
  var $el, leftPos, newWidth;
  $(".mega-navigation--level-one").append("<span class='nav-hover'></span>");
  var objSelected = false;
  var $magicLineheader = $(".nav-hover");
  $magicLineheader.hide();
  $magicLineheader
    .width($(".nav-hover").innerWidth())
    .css("left", $(".active").position().left - 40)
    .data("origLeft", $magicLineheader.position().left)
    .data("origWidth", $magicLineheader.width());

  $(".mega-navigation--level-one > li").hover(
    function () {
      $el = $(this);
      leftPos = $el.position().left + 20;
      newWidth = $el.width();
      $magicLineheader.stop().animate({
        left: leftPos,
        width: newWidth,
        opacity: 1,
      });
      $magicLineheader.show();
    },
    function () {
      if ($(".mega-navigation--level-one > li").hasClass("active") === true) {
        $magicLineheader.stop().animate({
          left: $magicLineheader.data("origLeft"),
          width: $magicLineheader.data("origWidth"),
        });
      } else {
        $magicLineheader.stop().animate({
          left: leftPos,
          width: $magicLineheader.data("origWidth"),
        });
      }
      if (objSelected === false) {
        $magicLineheader.hide();
      }
    }
  );

  megaNavCon.find("ul > li > a").on("click", function (e) {
    var $this = $(this);
    if ($this.is("[aria-expanded]")) {
      $this.attr("aria-expanded", true);
    }
    if ($this.attr("href").indexOf("/") == -1) {
      var $href = $this.attr("href").slice(1);
      var targetMegaNav = $("#brand-header--" + $href);
      $(
        ".mega-navigation--level-one li, .brand-header--nav__secondary li,.brand-header--level-2--con"
      ).removeClass("active");
      $this.parent().addClass("active");
      $(targetMegaNav).addClass("active");
      // $(".brand-header--level-2--con").removeClass('active');
      $magicLineheader
        .data("origLeft", $this.position().left)
        .data("origWidth", $this.width());
      $magicLineheader.show();
      objSelected = true;
      megaOverlay.show(function () {
        setMegaNavTabbing(targetMegaNav);
      });
      /*  setTimeout(function(){
                $("body").addClass("no-scroll");
            },200);*/
    }
  });
  brandHeaderSecondary.find("ul > li > a").on("click", function (e) {
    var $this = $(this);
    if ($this.is("[aria-expanded]")) {
      $this.attr("aria-expanded", true);
    }
    if ($this.attr("href").indexOf("/") == -1) {
      var $href = $this.attr("href").slice(1);
      var currTopPosition =
        $(".brand-header").offset().top + $(".brand-header--nav").height();
      var winw = $(window).innerWidth();
      var linkVal = $this.text();
      var targetMegaNav = $("#brand-header--" + $href);
      $(
        ".mega-navigation--level-one li, .brand-header--nav__secondary li"
      ).removeClass("active");
      $this.parent().addClass("active");
      $(".brand-header--level-2--con").removeClass("active");
      $("#brand-header--" + $href)
        .find(".title-mob")
        .html(linkVal);
      if (winw > 992) {
        $("#brand-header--" + $href).css("top", currTopPosition);
      }
      $("#brand-header--" + $href).addClass("active");
      megaOverlay.show(function () {
        setMegaNavTabbing(targetMegaNav);
      });
      /* setTimeout(function(){
               $("body").addClass("no-scroll");
            },200);*/
    }
  });
  $(
    ".mob--nav__navblock__levelTwo > ul > li > a, .mob--nav__navblock__levelThree > ul > li > a"
  ).on("click", function (e) {
    //e.preventDefault();
    var winw = $(window).innerWidth();
    var url = $(this).attr("href").split("");
    var $href = $(this).attr("href").slice(1);
    var linkVal = $(this).text();
    if ($(this).attr("href").indexOf("/") == -1) {
      $("#brand-header--" + $href)
        .find(".title-mob")
        .html(linkVal);
      if (winw < 992) {
        $(".brand-header--level-2--con").removeClass("active");
        if (url[0] === "#") {
          $("#brand-header--" + $href).addClass("active");
        }
      }
    }
  });
  $(".alert_close").on("click", function () {
    $(".mob--nav__navblock").css("top", dcu.site.navHeight());
  });
  $(".mega-navigation--level-one > li > a:not(:last)").each(function () {
    var _this = $(this).attr("href").toString().replace("#", "");
    if ($(this).attr("href").indexOf("/") == -1) {
      $("#brand-header--" + _this)
        .find(".title-mob")
        .text($(this).text());
    }
  });
  navClose.on("click", function (e) {
    e.preventDefault();
    var focusableEleLevelOne = $(".mega-navigation--level-one li.active a");
    var focusableEleSecondary = $(".brand-header--nav__secondary li.active a");
    $(".brand-header--level-2--con").removeClass("active");
    $(
      ".mega-navigation--level-one li, .brand-header--nav__secondary li"
    ).removeClass("active");
    $(".mega-navigation--level-one li a").removeAttr("tabindex");
    if (focusableEleLevelOne.length > 0) {
      focusableEleLevelOne.attr("aria-expanded", false);
      focusableEleLevelOne.focus();
    } else if (focusableEleSecondary.length > 0) {
      focusableEleSecondary.attr("aria-expanded", false);
      focusableEleSecondary.focus();
    }
    $(".nav-hover").css("opacity", "0");
    megaOverlay.hide();
    $("body").removeClass("no-scroll");
  });
  if (notifCon.length) {
    megaSubNav.addClass("navMarTop");
  } else {
    megaSubNav.addClass("navMarTopNoti");
  }

  $(".title-mob").on("click", function () {
    $(".brand-header--level-2--con").removeClass("active");
    $(".link-list__items").hide();
    $(".title").removeClass("title-mob-minus");
    $(".link-list").removeClass("link-list-opened");
    megaOverlay.hide();
  });

  $(document).mouseup(function (e) {
    var clickedTarget = $(e.target).closest("ul");
    if (
      !megaWrapper.is(e.target) &&
      megaWrapper.has(e.target).length === 0 &&
      !clickedTarget.is(
        ".mega-navigation--level-one, .brand-header--nav__secondary--level-one"
      )
    ) {
      if ($(window).outerWidth() >= 992) {
        megaWrapper.removeClass("active");
        meganavitem.removeClass("active");
        brandHeaderSecondary.find("li").removeClass("active");
        $magicLineheader.hide();
        megaOverlay.hide();
      }
    }
  });
  $(".menu-overlay").on("click", function () {
    $("body").removeClass("no-scroll");
  });
  $(".mega-navigation--level-one > li").on("keydown", function (e) {
    if (e.keyCode === 9) {
      $(".focus-menu").focus();
    }
  });
  var setCardTabIndex = function (tabIndex, isCommunityMegaNav) {
    if (isCommunityMegaNav) {
      tabIndex = $(".mega-navigation--level-one>li").length - 1;
    }
    $(".headerMegaNavigation > div:eq(" + tabIndex + ")")
      .find("a")
      .each(function (index) {
        $(this).attr("tabindex", parseInt(index, 0) + 2);
      });
  };
  var removeCardTabIndex = function (tabIndex, isCommunityMegaNav) {
    if (isCommunityMegaNav) {
      tabIndex = $(".mega-navigation--level-one>li").length - 1;
    }
    $(".headerMegaNavigation > div:eq(" + tabIndex + ")")
      .find("a")
      .each(function () {
        $(this).removeAttr("tabindex");
      });
  };
  var setUpTabbing = function () {
    var nextTabIndex, currTabIndex, tabIndexSecondary;
    $(".brand-header--navbar__nav").on("keyup click", function (e) {
      currTabIndex = parseInt(
        $(".mega-navigation--level-one > li > a").index(e.target),
        0
      );
      if (
        e.which === 1 &&
        $(".mega-navigation--level-one > li > a").length > currTabIndex + 1
      ) {
        setCardTabIndex(currTabIndex, false);
        nextTabIndex =
          parseInt(
            $(".headerMegaNavigation > div:eq(" + currTabIndex + ")")
              .find("a")
              .last()
              .attr("tabIndex"),
            0
          ) + 1;
        $(".mega-navigation--level-one > li > a:eq(" + currTabIndex + ")").attr(
          "tabindex",
          1
        );
        $(
          ".mega-navigation--level-one > li > a:eq(" + (currTabIndex + 1) + ")"
        ).attr("tabindex", nextTabIndex);
      } else if (e.which === 9) {
        removeCardTabIndex(currTabIndex - 1, false);
        $(".mega-navigation--level-one > li > a").removeAttr("tabindex");
      }
    });
    $(".brand-header--nav__secondary").on("keyup click", function (e) {
      currTabIndex = parseInt(
        $(".brand-header--nav__secondary--level-one > li > a").index(e.target),
        0
      );
      if (
        e.which === 1 &&
        $(".brand-header--nav__secondary--level-one > li > a").length >
          currTabIndex + 1
      ) {
        setCardTabIndex(currTabIndex, true);
        tabIndexSecondary = $(".mega-navigation--level-one>li").length - 1;
        nextTabIndex =
          parseInt(
            $(".headerMegaNavigation > div:eq(" + tabIndexSecondary + ")")
              .find("a")
              .last()
              .attr("tabIndex"),
            0
          ) + 1;
        $(
          ".brand-header--nav__secondary--level-one > li > a:eq(" +
            currTabIndex +
            ")"
        ).attr("tabindex", 1);
        $(
          ".brand-header--nav__secondary--level-one > li > a:eq(" +
            (currTabIndex + 1) +
            ")"
        ).attr("tabindex", nextTabIndex);
      } else if (e.which === 9) {
        removeCardTabIndex(currTabIndex - 1, false);
        $(".brand-header--nav__secondary--level-one > li > a").removeAttr(
          "tabindex"
        );
      }
    });
    $(".brand-header--level-2--con.active .nav-close").on(
      "click keyup",
      function () {
        $(".headerMegaNavigation > div").find("a").removeAttr("tabindex");
        $(".mega-navigation--level-one > li > a").removeAttr("tabindex");
        $(".brand-header--nav__secondary--level-one > li > a").removeAttr(
          "tabindex"
        );
      }
    );
  };
  var setMegaNavTabbing = function (setMegaNavTabbing) {
    var megaNavInput = setMegaNavTabbing.find("a").filter(":visible"),
      firstInputElement = megaNavInput.first(),
      lastInputElement = megaNavInput.last();

    lastInputElement.on("keydown", function (e) {
      if (e.which === 9 && !e.shiftKey) {
        e.preventDefault();
        firstInputElement.focus();
      }
    });

    firstInputElement.on("keydown", function (e) {
      if (e.which === 9 && e.shiftKey) {
        e.preventDefault();
        lastInputElement.focus();
      }
    });
  };
  setUpTabbing();
};
$(document).ready(function () {
  if ($(".brand-header--level-2--con").length) {
    dcu.site.megaNav();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.branchInformation = function () {
  var setBorderWidth = function () {
    var spanWidth = $("span", ".map-numbers li.active").outerWidth() + "px";
    if ($(window).outerWidth() <= 992) {
      $("div", ".map-numbers li").width("100%");
      $("div", ".map-numbers li.active").width("100%");
    } else {
      $("div", ".map-numbers li").width("16px");
      $("div", ".map-numbers li.active").width(spanWidth);
    }
  };

  $(".map-numbers").on("click", "li", function (e) {
    if (
      e.target.getAttribute("href") === "#" ||
      e.target.getAttribute("href") === null
    ) {
      e.preventDefault();
    }
    var target = $(this).data("image-ref");
    $("#" + target)
      .removeClass("hide")
      .siblings("picture")
      .addClass("hide");
    $(".map-numbers li").removeClass("active");
    $(this).addClass("active");
    setBorderWidth();
  });

  function setLastCharColor() {
    var atmFeeAmount = $(".atm-fee-amount").text().toString();
    var atmAmountExcludingLast = atmFeeAmount.slice(0, -1);
    var atmAmountLastDigit = atmFeeAmount.slice(-1);
    var atmAmountHtml =
      "<span>" +
      atmAmountExcludingLast +
      '</span><span class="last-char">' +
      atmAmountLastDigit +
      "</span>";
    $(".atm-fee-amount").html(atmAmountHtml);
  }
  var getATMs = function () {
    if (navigator.geolocation) {
      var showPosition = function (position) {
        var atmApi =
          "https://www.dcuinsurance.com/dcu-insurance/scripts/fetch_atm_count.php?lon=" +
          position.coords.longitude +
          "&lat=" +
          position.coords.latitude +
          "&mile=5&type=1";
        $.ajax({
          type: "GET",
          url: atmApi,
          dataType: "xml",
          success: function (response) {
            var locations, counter, xmlDoc, atmCount, attributes, cityName;
            xmlDoc = response;
            atmCount = 0;
            locations = xmlDoc.getElementsByTagName("locations");
            if (xmlDoc.getElementsByTagName("location")[0] === undefined) {
              return false;
            }
            attributes = xmlDoc
              .getElementsByTagName("location")[0]
              .getElementsByTagName("attribute");
            for (var index = 0; index < attributes.length; index++) {
              if (attributes[index].getAttribute("key") === "CityName") {
                cityName = attributes[index].childNodes[0].nodeValue;
              }
            }
            for (counter = 0; counter < locations.length; counter++) {
              if (locations[counter].getAttribute("locationCount")) {
                atmCount += parseInt(
                  locations[counter].getAttribute("locationCount"),
                  0
                );
              }
            }
            if (atmCount > 0) {
              $(".near-by-atm strong").text(cityName);
              $(".near-by-atm").removeClass("atm-count-hide");
              $(".near-by-atm span").text(atmCount);
            } else {
              $(".near-by-atm").addClass("atm-count-hide");
            }
          },
          error: function () {
            $(".near-by-atm").addClass("atm-count-hide");
          },
        });
      };
      navigator.geolocation.getCurrentPosition(showPosition);
    } else {
      $(".near-by-atm").addClass("atm-count-hide");
    }
  };
  getATMs();
  setLastCharColor();
  setBorderWidth();
  $(".near-by-atm").addClass("atm-count-hide");
  $(".branch-information__atmfee").width($(".map-numbers").outerWidth());
  $(".map-image-disclaimer").width($(".map-numbers").outerWidth());
};

function excecuteBranchInformation() {
  if ($(".branch-information").length) {
    dcu.site.branchInformation();
  }
}

$(document).ready(excecuteBranchInformation);
$(window).resize(excecuteBranchInformation);

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.contentSelectorGrid = function () {
  var $contentSelector = $(".content-selector"),
    $slider = $contentSelector.find(".slider"),
    $progressBar = $contentSelector.find(".progress"),
    $previous = $contentSelector.find(".previous"),
    $next = $contentSelector.find(".next"),
    $progressBarLabel = $contentSelector.find(".slider__label"),
    dynamicTiles = 1,
    $windowWidth = $(window).outerWidth(),
    _slickOption = {
      slidesToShow: 2,
      slidesToScroll: 1,
      speed: 400,
      prevArrow: $($previous, ".content-selector .slider-controls"),
      nextArrow: $($next, ".content-selector .slider-controls"),
      infinite: false,
      responsive: [
        {
          breakpoint: 1100,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1,
          },
        },
        {
          breakpoint: 992,
          settings: "unslick",
        },
      ],
    };
  var dropdown = function () {
    var index = 0;
    return {
      getIndex: function getIndex() {
        return index;
      },
      setIndex: function setIndex(new_index) {
        index = new_index;
      },
    };
  };
  dropdown();
  var sliderControls = function (windowWidth) {
    if (windowWidth <= 720) {
      return false;
    }
    var _nextWidth = $(".content-selector .next").outerWidth(),
      _prevWidth = $(".content-selector .previous").outerWidth();
    $progressBar.css({
      width:
        $(".content-selector .slider-controls").width() -
        _nextWidth -
        _prevWidth -
        12 +
        "px",
    });
  };
  var _els = $(".dropdown .dropdown-item");
  _els.each(function (index) {
    var _span = document.createElement("SPAN");
    var _text = document.createTextNode($(_els[index]).text());
    _span.appendChild(_text);
    _span.setAttribute("aria-hidden", "true");
    document.getElementById("contentSelector").appendChild(_span);
  });
  var i = 0;
  var interval = setInterval(function () {
    var __span = $("#contentSelector span");
    var _len = __span.length;
    if (i === 0) {
      $(__span[0]).addClass("mr-top");
      ++i;
    } else {
      $(__span[0])
        .insertAfter($(__span[_len - 1]))
        .removeClass("mr-top");
      $(__span[1]).addClass("mr-top");
    }
  }, 5000);
  $("#contentSelector").on("click", function () {
    $("#contentSelector span:eq(1)").text($(".dropdown-item.active").text());
  });

  $(".content-selector__dropdown .dropdown-item").on("click", function () {
    if ($("#hiddenCard").hasClass("hidden")) {
      $("#hiddenCard").removeClass("hidden");
    }
    $(".dropdown-menu .dropdown-item").removeClass("active");
    $(this).addClass("active");
    $("#contentSelector span:eq(0)").addClass("mr-top");
    clearInterval(interval);
    $("#contentSelector span:eq(1)").text($(".dropdown-item.active").text());
    if ($(".content-selector .slick-initialized").length) {
      $slider.slick("unslick");
    }
    var _key = $(".dropdown-item.active").attr("data-key");

    // send json request to capture the data
    if (!!_key) {
      $.ajax({
        url: "/bin/dcu/productStripServlet",
        type: "POST",
        data: {
          selector: _key,
        },
        success: function success(response) {
          var _contract = response;
          if (!!_contract) {
            var _staticCard = "",
              _staticCardHolder = $(".static-card"),
              newTabCalculate =
                _contract.static.newTabCalculate === "true"
                  ? "_blank"
                  : "_self",
              newTabReadCta =
                _contract.static.newTabReadCta === "true" ? "_blank" : "_self",
              newTabVideoCta =
                _contract.static.newTabVideoCta === "true" ? "_blank" : "_self",
              staticCardTopic,
              staticCardHeadLine,
              staticCardSubCopy,
              staticCardImage,
              calculateCTA,
              readCTA,
              videoCTA;
            if (typeof _contract.static.staticCardTopic !== "undefined") {
              staticCardTopic =
                '<span class="static-card__topic text-uppercase">' +
                _contract.static.staticCardTopic +
                "</span>";
            } else {
              staticCardTopic = "";
            }
            if (typeof _contract.static.staticCardHeadLine !== "undefined") {
              staticCardHeadLine =
                '<div class="static-card__headline">\n <h2>' +
                _contract.static.staticCardHeadLine +
                "</h2>\n                </div>";
            } else {
              staticCardHeadLine = "";
            }
            if (typeof _contract.static.staticCardSubCopy !== "undefined") {
              staticCardSubCopy =
                ' <div class="static-card__subcopy">\n <p>' +
                _contract.static.staticCardSubCopy +
                "</p>\n                </div>\n   ";
            } else {
              staticCardSubCopy = "";
            }
            if (typeof _contract.static.staticCardImage !== "undefined") {
              staticCardImage =
                ' <div class="static-card__img-holder">\n <img class="img-fluid" src="' +
                _contract.static.staticCardImage +
                '" alt="' +
                _contract.static.staticCardImageAltText +
                '">\n                </div>\n   ';
            } else {
              staticCardImage = "";
            }
            if (
              typeof _contract.static.calculateCTA !== "undefined" &&
              typeof _contract.static.calculateCTALink !== "undefined"
            ) {
              calculateCTA =
                ' <li><a class="btn-link" target="' +
                newTabCalculate +
                '" href="' +
                _contract.static.calculateCTALink +
                '" role="link" aria-label="' +
                _contract.static.calculateCTA +
                '"><span class="icon icon-dcu-calculator"></span>' +
                _contract.static.calculateCTA +
                "<span></span></a></li>\n";
            } else {
              calculateCTA = "";
            }
            if (
              typeof _contract.static.readCTA !== "undefined" &&
              typeof _contract.static.readCTALink !== "undefined"
            ) {
              readCTA =
                ' <li><a class="btn-link" target="' +
                newTabReadCta +
                '"  href="' +
                _contract.static.readCTALink +
                '" role="link" aria-label="' +
                _contract.static.readCTA +
                '"><span class="icon icon-dcu-readarticle"></span>' +
                _contract.static.readCTA +
                "<span></span></a></li>\n";
            } else {
              readCTA = "";
            }
            if (
              typeof _contract.static.videoCTA !== "undefined" &&
              typeof _contract.static.videoCTALink !== "undefined"
            ) {
              videoCTA =
                ' <li> <a class="btn-link" target="' +
                newTabVideoCta +
                '" href="' +
                _contract.static.videoCTALink +
                '" role="link" aria-label="' +
                _contract.static.videoCTA +
                '"><span class="icon icon-dcu-video"></span>' +
                _contract.static.videoCTA +
                "<span></span></a> </li>\n";
            } else {
              videoCTA = "";
            }
            _staticCard +=
              staticCardTopic +
              staticCardHeadLine +
              staticCardSubCopy +
              staticCardImage +
              '\n <ul class="list-unstyled">\n ' +
              calculateCTA +
              readCTA +
              videoCTA +
              "</ul>";
            //_staticCard += '\n <span class="static-card__topic text-uppercase">' + _contract.static.staticCardTopic + '</span>\n                <div class="static-card__headline">\n                  <h2>' + _contract.static.staticCardHeadLine + '</h2>\n                </div>\n                <div class="static-card__subcopy">\n                  <p>' + _contract.static.staticCardSubCopy + '</p>\n                </div>\n                <div class="static-card__img-holder">\n                    <img class="img-fluid" src="' + _contract.static.staticCardImage + '" alt="' + _contract.static.staticCardImageAltText + '">\n                </div>\n                <ul class="list-unstyled">\n                  <li><a class="btn-link" target="' + newTabCalculate + '" href="' + _contract.static.calculateCTALink + '" rel="link"><span class="icon icon-dcu-calculator"></span>' + _contract.static.calculateCTA + '<span></span></a></li>\n                  <li><a class="btn-link" target="' + newTabReadCta + '"  href="' + _contract.static.readCTALink + '" rel="link"><span class="icon icon-dcu-readarticle"></span>' + _contract.static.readCTA + '<span></span></a></li>\n                  <li> <a class="btn-link" target="' + newTabVideoCta + '" href="' + _contract.static.videoCTALink + '" rel="link"><span class="icon icon-dcu-video"></span>' + _contract.static.videoCTA + '<span></span></a> </li>\n                </ul>\n                ';
            _staticCardHolder.find("*").remove();
            _staticCardHolder.html(_staticCard);
            var _html = "";
            for (var Item in _contract.dynamic) {
              if (_contract.dynamic.hasOwnProperty(Item)) {
                var _el = _contract.dynamic[Item],
                  newTabPrimary =
                    _el.newTabPrimary === "true" ? "_blank" : "_self",
                  newTabSecondry =
                    _el.newTabSecondry === "true" ? "_blank" : "_self",
                  showHide = _el.dynamicPrimaryCTAText === null ? "d-none" : "",
                  showHideLink =
                    _el.dynamicSecondaryCTAText === null ? "d-none" : "",
                  dynamicCardTopic,
                  dynamicCardHeading,
                  dynamicCardSubCopy,
                  percentageText,
                  dynamicPrimaryCTALink,
                  dynamicSecondaryCTAText;

                if (typeof _el.dynamicCardTopic !== "undefined") {
                  dynamicCardTopic =
                    '<p class="text-uppercase dynamic-card__topic">' +
                    _el.dynamicCardTopic +
                    "</p>";
                } else {
                  dynamicCardTopic = "";
                }
                if (typeof _el.dynamicCardHeading !== "undefined") {
                  dynamicCardHeading =
                    ' <small class="text-uppercase dynamic-card__subheading">' +
                    _el.dynamicCardHeading +
                    "</small>";
                } else {
                  dynamicCardHeading = "";
                }
                if (
                  typeof _el.percentageText !== "undefined" &&
                  typeof _el.aprText !== "undefined"
                ) {
                  percentageText =
                    '<h3 class="dynamic-card__heading">' +
                    _el.percentageText +
                    "<small>" +
                    _el.aprText +
                    "</small></h3>";
                } else {
                  percentageText = "";
                }
                if (typeof _el.dynamicCardSubCopy !== "undefined") {
                  dynamicCardSubCopy =
                    '<p class="dynamic-card__subcopy">' +
                    _el.dynamicCardSubCopy +
                    "</p>";
                } else {
                  dynamicCardSubCopy = "";
                }
                if (
                  typeof _el.dynamicPrimaryCTALink !== "undefined" &&
                  typeof _el.dynamicPrimaryCTAText !== "undefined"
                ) {
                  dynamicPrimaryCTALink =
                    '<div class="btn-group"> <a href="' +
                    _el.dynamicPrimaryCTALink +
                    '" role="button" target="' +
                    newTabPrimary +
                    '" class="btn-border-primary text-uppercase ' +
                    showHide +
                    '" aria-label="' +
                    _el.dynamicPrimaryCTAText +
                    '">' +
                    _el.dynamicPrimaryCTAText +
                    "</a></div>";
                } else {
                  dynamicPrimaryCTALink = "";
                }
                if (
                  typeof _el.dynamicSecondaryCTALink !== "undefined" &&
                  typeof _el.dynamicSecondaryCTAText !== "undefined"
                ) {
                  dynamicSecondaryCTAText =
                    ' <a href="' +
                    _el.dynamicSecondaryCTALink +
                    '" role="link" target="' +
                    newTabSecondry +
                    '" class="text-uppercase btn-link' +
                    showHideLink +
                    '" aria-label="' +
                    _el.dynamicSecondaryCTAText +
                    '">' +
                    _el.dynamicSecondaryCTAText +
                    "<span></span></a>";
                } else {
                  dynamicSecondaryCTAText = "";
                }
                _html +=
                  '\n  <div>\n  <div class="dynamic-card ">\n ' +
                  dynamicCardTopic +
                  dynamicCardHeading +
                  percentageText +
                  dynamicCardSubCopy +
                  dynamicPrimaryCTALink +
                  dynamicSecondaryCTAText +
                  "  </div> <!-- end card -->\n                        </div>\n ";
              }
            }

            $slider.html(_html).slick(_slickOption);
            $(".dynamic-card__subheading").each(function () {
              if ($(this).text() == "undefined") {
                $(this).remove();
              }
            });
            $(".dynamic-card__subcopy").each(function () {
              if ($(this).text() == "undefined") {
                $(this).remove();
              }
            });
            $(".dynamic-card__heading").each(function () {
              var a = $(this).text().split(" ");
              if (a[0] == "undefined%") {
                $(this).remove();
              }
            });
            dynamicTiles = response.dynamic.length;

            if (
              ($(".content-selector .slick-arrow").hasClass("slick-hidden") &&
                dynamicTiles <= 2) ||
              (dynamicTiles < 2 && $windowWidth < 1100)
            ) {
              $(".content-selector .slider-controls").addClass("invisible");
            } else {
              $(".content-selector .slider-controls").removeClass("invisible");
            }
          }
        },
        done: function (response) {
          sliderControls($windowWidth);
        },
        error: function error() {},
      });
    }
    $(window).on("resize orientationchange", function () {
      var $windowWidth = $(window).outerWidth();
      if (
        ($windowWidth >= 1280 && dynamicTiles <= 2) ||
        ($windowWidth < 1100 && dynamicTiles < 2)
      ) {
        $(".content-selector .slider-controls").addClass("invisible");
      } else {
        $(".content-selector .slider-controls").removeClass("invisible");
      }
      sliderControls($windowWidth);

      setTimeout(function () {
        if ($windowWidth > 992) {
          $slider.not(".slick-initialized").slick(_slickOption);
        }
      }, 200);
    });
  });
  $(".content-selector__dropdown .dropdown-item").on("keyup", function (e) {
    if (e.keyCode === 13) {
      $(this).click();
    }
  });

  $slider.on("beforeChange", function (event, slick, currentSlide, nextSlide) {
    var slickSlideCount,
      $windowWidth = $(window).outerWidth();
    if ($windowWidth < 1101) {
      slickSlideCount = slick.slideCount - 1;
    } else {
      slickSlideCount = slick.slideCount - 2;
    }
    var calc = (nextSlide / slickSlideCount) * 100;
    $progressBar
      .css("background-size", calc + "% 100%")
      .attr("aria-valuenow", calc);
    $progressBarLabel.text(calc + "% completed");
  });
  function determineDropDirection() {
    $(".dropdown-menu").each(function () {
      $(this).css({
        visibility: "hidden",
        display: "block",
      });
      $(this).parent().removeClass("dropup");
      if (
        $(this).offset().top + $(this).outerHeight() >
        $(window).innerHeight() + $(window).scrollTop()
      ) {
        $(this).parent().addClass("dropup");
      }
      $(this).removeAttr("style");
    });
  }

  determineDropDirection();
  $(window).scroll(determineDropDirection);
};

$(document).ready(function () {
  if ($(".content-selector").length) {
    dcu.site.contentSelectorGrid();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.stickyNavbar = function () {
  stickyNav();
  var navHeight = $(".sticky-navbar").outerHeight(),
    headerGlobalNavigationHeight = $(".brand-header--navbar").outerHeight(),
    navHeaderHeight = $(".brand-header").outerHeight(),
    mobNavHeaderStickyHeight = $(".mob--nav__header").outerHeight(),
    navmobheader = $(".mob--nav").outerHeight(),
    nonstickyPos = navHeight + navHeaderHeight + 32,
    nonstickyPosMob = navHeight + navmobheader + 90,
    isIE11 = !!navigator.userAgent.match(/Trident.*rv\:11\./);

  //Hover animation
  var $el, leftPos, newWidth;
  if ($("#magic-line").length === 0) {
    $(".sticky-navbar__dropdown__menu").append("<li id='magic-line'></li>");
  }
  var $magicLine = $("#magic-line");
  $magicLine
    .width($(".current_page_item > a").innerWidth())
    .css("left", $(".current_page_item").position().left + 23)
    .data("origLeft", $magicLine.position().left)
    .data("origWidth", $magicLine.width());

  $(".sticky-navbar__dropdown__menu > li").hover(
    function () {
      $el = $(this);
      leftPos = $el.position().left + 23;
      newWidth = $el.width();

      $magicLine.stop().animate({
        left: leftPos,
        width: newWidth,
      });
    },
    function () {
      $magicLine.stop().animate({
        left: $magicLine.data("origLeft"),
        width: $magicLine.data("origWidth"),
      });
    }
  );
  function stickyNav() {
    var el = $(".sticky-navbar");
    var pos = el.position();
    var windowpos = $(window).scrollTop();
    if (windowpos > pos.top - 132) {
      el.addClass("sticky-navbar--fixed");
    } else {
      el.removeClass("sticky-navbar--fixed");
    }
  }
  function scrollToSection(event, hash) {
    if (hash !== "") {
      event.preventDefault();
      var scrollHeight;
      if ($(hash).length > 0) {
        // Calculation of how much screen should scroll
        if ($(".sticky-navbar--fixed").length > 0) {
          if ($(window).outerWidth() <= 992) {
            scrollHeight =
              $(hash).offset().top - (navHeight + mobNavHeaderStickyHeight);
          } else {
            scrollHeight = $(hash).offset().top - (navHeaderHeight + navHeight);
          }
        } else {
          if ($(window).outerWidth() <= 992) {
            scrollHeight =
              $(hash).offset().top -
              (navHeight + mobNavHeaderStickyHeight + 80);
          } else {
            scrollHeight =
              $(hash).offset().top - (navHeaderHeight + navHeight + 190);
          }
        }
        $("body, html").animate(
          {
            scrollTop: scrollHeight,
          },
          500
        );
      }
    }
  }
  // Click on item to scroll to the corressponding section
  function scrollToInPageSection() {
    $(".sticky-navbar__dropdown__menu--item a")
      .off("click")
      .on("click", function (event) {
        if ($(window).outerWidth() > 992) {
          $(".sticky-navbar__dropdown__menu--item a").removeClass(
            "active current_page_item"
          );
          $(".sticky-navbar__dropdown__menu--item").removeClass(
            "current_page_item"
          );
          $(this).addClass("active current_page_item");
          $(this).parent().addClass("current_page_item");
          scrollToSection(event, this.hash);
          $magicLine
            .data("origLeft", $(this).parent().position().left + 23)
            .data("origWidth", $(this).parent().width());
        }
      });
  }
  // Implementing Sticky behaviour and show logo if nav moves to top of the page
  function handleStickyOnScroll() {
    var headerHeight = $(window).outerWidth() > 992 ? 128 : 128;
    $(window).scroll(function () {
      if (!$(".brand-header--level-2--con").hasClass("active")) {
        if ($(window).scrollTop() >= headerHeight) {
          $(".sticky-navbar").addClass("sticky-navbar--fixed");
        }
        if ($(window).scrollTop() < headerHeight) {
          $(".sticky-navbar").removeClass("sticky-navbar--fixed");
        }
      }
    });
    /*$(window).scroll(function() {
            if ($(window).scrollTop() >= headerHeight) {
                $(".sticky-navbar").addClass("sticky-navbar--fixed");
                if ($(window).outerWidth() > 992) {
                    $(".sticky-navbar__logo").removeClass(
                        "sticky-navbar__logo--hide"
                    );
                    $(".sticky-navbar__dropdown > a").removeAttr("tabindex");
                }
            }
            if ($(window).scrollTop() < headerHeight) {
                $(".sticky-navbar").removeClass("sticky-navbar--fixed");
                if ($(window).outerWidth() > 992) {
                    $(".sticky-navbar__logo").addClass(
                        "sticky-navbar__logo--hide"
                    );
                    $(".sticky-navbar__dropdown > a").attr("tabindex", "-1");
                }
            }
            if ($(".sticky-navbar").hasClass("sticky-navbar--fixed")) {
                $(".sticky-navbar__dropdown__menu").css({
                    top: 0
                });
            }
        });*/
  }

  //Set claases and other dom changes between Mobile and desktop views
  function updateDomForDevices() {
    if ($(window).outerWidth() > 992) {
      $(".sticky-navbar__dropdown__menu").css({
        top: 0,
      });
      $(".sticky-navbar__apply").parent().hide();
      $("#sticky-nav__dropdown--btn").hide();
      if ($(".sticky-navbar__apply a").data("applylabel") !== undefined) {
        $(".sticky-navbar__dropdown__menu").append(
          $(".sticky-navbar__apply a")
        );
      }
      $(".sticky-navbar__dropdown__menu").removeClass(
        "sticky-navbar__dropdown--hide"
      );
      $(".sticky-navbar__nav").addClass("text-right");
      //$(".sticky-navbar__logo").show();
    } else {
      $(".sticky-navbar__apply").parent().show();
      $(".sticky-navbar__apply").append(
        $(".sticky-navbar__dropdown__menu .btn-rt-chopped")
      );
      $("#sticky-nav__dropdown--btn").show();
      $(".sticky-navbar__dropdown__menu .btn-rt-chopped").empty();
      $(".sticky-navbar__dropdown__menu").addClass(
        "sticky-navbar__dropdown--hide"
      );
      $(".sticky-navbar__nav").removeClass("text-right");
      var _spanText = $(".sticky-navbar__dropdown__menu--item.active").text();
      $("#sticky-nav__dropdown--btn").html("<span>" + _spanText + "</span>");
    }
  }
  // Show/Hide Apply button based on text configuration while authoring
  function handleApplyButtonDisplay() {
    if ($(".sticky-navbar__apply a").data("applylabel") === undefined) {
      $(".sticky-navbar__nav").addClass("col-12");
      $(".sticky-navbar__apply").hide();
    } else {
      $(".sticky-navbar__apply").show();
      $(".sticky-navbar__nav").removeClass("col-12");
    }
  }
  // Click on Button in Mobile view to show/hide navigation dropdown menu
  $("#sticky-nav__dropdown--btn").on("click", function (event) {
    if ($(window).outerWidth() <= 992) {
      var menuHeight = $(".sticky-navbar__dropdown__menu").outerHeight(),
        topSpace = $(".sticky-navbar__wrapper").offset().top,
        bottomSpace = $(window).outerHeight() - topSpace;
      if (bottomSpace < menuHeight) {
        $(".sticky-navbar__dropdown__menu").css({
          top: "-" + menuHeight + "px",
        });
      } else {
        $(".sticky-navbar__dropdown__menu").css({
          top: "5px",
        });
      }
      if ($(".sticky-navbar").hasClass("sticky-navbar--fixed")) {
        $(".sticky-navbar__dropdown__menu").css({
          top: "5px",
        });
      }
    }
    event.stopImmediatePropagation();
    $(".sticky-navbar__dropdown__menu").toggleClass(
      "sticky-navbar__dropdown--hide"
    );
  });
  // In mobile hide the dropdown menu on clicking outside the menu anywhere in the document
  $(document).on("click touchend", function () {
    if ($(window).outerWidth() <= 992) {
      $(".sticky-navbar__dropdown__menu").addClass(
        "sticky-navbar__dropdown--hide"
      );
    }
  });

  $(".sticky-navbar__dropdown__menu--item").on(
    "click touchend",
    function (event) {
      event.stopImmediatePropagation();
      if ($(window).outerWidth() <= 992) {
        $(".sticky-navbar__dropdown__menu").toggleClass(
          "sticky-navbar__dropdown--hide"
        );
        $(".sticky-navbar__dropdown__menu--item a").removeClass("active");
        $(this).find("a").addClass("active");
        var href = $(this).find("a").prop("hash");
        scrollToSection(event, href);
      }
      $(".sticky-navbar__dropdown__menu--item").removeClass("active");
      $(this).addClass("active");
      var _spanText = $(".sticky-navbar__dropdown__menu--item.active").text();
      $("#sticky-nav__dropdown--btn").html("<span>" + _spanText + "</span>");
    }
  );
  // Hide logo as default
  $(".sticky-navbar__logo").hide();
  // Keep first menu option selected by-default
  if ($(".sticky-navbar__dropdown__menu li.active").length === 0) {
    $(".sticky-navbar__dropdown__menu li").first().addClass("active");
    $(".sticky-navbar__dropdown__menu li:first a").addClass("active");
  }
  updateDomForDevices();
  handleApplyButtonDisplay();
  scrollToInPageSection();
  handleStickyOnScroll();
};

function triggerStickyNavbar() {
  if ($(".sticky-navbar").length) {
    dcu.site.stickyNavbar();
  }
}
$(document).ready(function () {
  triggerStickyNavbar();
});
$(window).on("resize orientationchange", function () {
  triggerStickyNavbar();
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.differentiator = function () {
  var _diffBlock = $(".diffrentiator .d-none.d-sm-block");
  var _diffBlockCTA = $(".differentiator-block-more__cta");
  var _blockmoreWrap = $(".differentiator-block-more");
  $(".differentiator-block-more").on("click", function () {
    _diffBlock.removeClass("d-none");
    _diffBlockCTA.addClass("hidden");
    _blockmoreWrap.addClass("hidden");
  });
};
$(document).ready(function () {
  if ($(".diffrentiator").length) {
    dcu.site.differentiator();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.resources = function () {
  if (!$(".resource__accordion--item").length > 1) {
    $(".js_resources_accordion_item").each(function (i) {
      $(this).attr("id", $(this).attr("id") + i);
    });
  }

  // $('#resources__sub_accordion').each(function (i) {
  //     $(this).attr('id', $(this).attr('id') + i);
  // });
  $(".accordion__sub-header a").on("click", function (e) {
    e.stopPropagation();
  });
  $("[id^=videoModal]").on("hidden.bs.modal", function () {
    $(this).find("video").get(0).pause();
  });
  $("[id^=videoModal]").on("shown.bs.modal", function () {
    $(this).find("video").get(0).play();
  });
  $(".accordion.sub-accordion").each(function () {
    var randomValue = $(this).find(".randomValue").val();
    $(this)
      .find(".js-randomValue-btn")
      .attr(
        "data-target",
        $(this).find(".js-randomValue-btn").attr("data-target") + randomValue
      );
    $(this)
      .find(".js-randomValue-btn")
      .attr(
        "aria-controls",
        $(this).find(".js-randomValue-btn").attr("aria-controls") + randomValue
      );
    $(this)
      .find(".js-randomValue-content")
      .attr("id", "resources__sub_accordion_item" + randomValue);
  });
};
$(document).ready(function () {
  if ($(".resources").length) {
    var resourcesAccordionItem = $(".resource__accordion--item");
    dcu.site.resources();
    dcu.site.generateComponentDynamicId(resourcesAccordionItem, true, false);
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.reviews = function () {
  var $reviewsCarousel = $(".plp-reviews"),
    autoPlayDuration = $reviewsCarousel
      .find(".slider-content")
      .data("autoplaytimegap"),
    $progressBarCentered = $reviewsCarousel.find(".progress"),
    $sliderControlsCentered = $reviewsCarousel.find(
      ".slider-controls-centered"
    ),
    $sliderItem = $reviewsCarousel.find(".slider-item"),
    $next = $reviewsCarousel.find(".next"),
    $previous = $reviewsCarousel.find(".previous"),
    progressBar,
    showHideControls;

  showHideControls = function ($currSliderItem, $currSliderControlsCentered) {
    if ($currSliderItem.length < 2) {
      $currSliderControlsCentered.addClass("invisible");
    }
  };
  var sliderControls = function () {
    var progressBarWidth;

    $sliderControlsCentered.css({ width: $sliderItem.outerWidth() });
    if ($(window).width() > 992) {
      progressBarWidth =
        $sliderControlsCentered.width() -
        ($next.outerWidth() + $previous.outerWidth());
    } else {
      progressBarWidth = $sliderControlsCentered.width();
    }
    $progressBarCentered.css({
      width: progressBarWidth - 1,
    });
  };

  progressBar = function (
    $sliderCentered,
    $progressBarCentered,
    $progressBarLabelCentered
  ) {
    $sliderCentered.on(
      "beforeChange",
      function (event, slick, currentSlide, nextSlide) {
        var calc = ((nextSlide + 1) / slick.slideCount) * 100;
        $progressBarCentered
          .css("background-size", calc + "% 100%")
          .attr("aria-valuenow", calc);
        $progressBarLabelCentered.text(calc + "% completed");
      }
    );
  };

  function renderbazaarVoice() {
    var productId = $reviewsCarousel
      .find(".slick-active")
      .find(".reviews__item--wrapper")
      .data("productid");
    if (productId) {
      $("#bazaarVoice > .container > .row > div")
        .find("div")
        .each(function () {
          $(this).attr("data-bv-product-id", productId);
        });
      // load bazaar voice script only once
      if (!window.BV) {
        var bvUrl = $reviewsCarousel.data("bvurl");
        $.getScript(bvUrl, function () {});
      }
    }
  }
  $reviewsCarousel.each(function () {
    var _this = $(this),
      $currSliderCentered = _this.find(".slider-centered"),
      $currProgressBarCentered = _this.find(".progress"),
      $currProgressBarLabelCentered = _this.find(
        ".slider__label",
        ".slider-controls-centered"
      ),
      $currSliderControlsCentered = _this.find(".slider-controls-centered"),
      $currSliderItem = _this.find(".slider-item"),
      $currNext = _this.find(".next"),
      $currPrevious = _this.find(".previous"),
      slickOptions = {
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 400,
        centerPadding: "26px",
        autoplay: false,
        autoplaySpeed: 7000,
        prevArrow: $($currPrevious, $currSliderControlsCentered),
        nextArrow: $($currNext, $currSliderControlsCentered),
        centerMode: true,
        mobileFirst: true,
        responsive: [
          {
            breakpoint: 320,
            settings: {
              centerPadding: "26px",
            },
          },
          {
            breakpoint: 719,
            settings: {
              centerPadding: "65px",
            },
          },
          {
            breakpoint: 992,
            settings: {
              centerPadding: "116px",
            },
          },
        ],
      };
    //Calcutating auto play time gap
    if (!isNaN(autoPlayDuration) && autoPlayDuration !== "") {
      slickOptions.autoplaySpeed = autoPlayDuration * 1000;
    } else {
      slickOptions.autoplaySpeed = 7000;
    }

    $currSliderCentered.slick(slickOptions);
    showHideControls($currSliderItem, $currSliderControlsCentered);
    $(".plp-reviews .slick-current").attr("tabindex", -1);

    progressBar(
      $currSliderCentered,
      $currProgressBarCentered,
      $currProgressBarLabelCentered
    );
  });

  sliderControls();

  $(window).on("resize orientationchange", function () {
    setTimeout(function () {
      sliderControls();
    }, 200);
  });
  $(".reviews-page").on("click", function () {
    $(".reviews-page").each(function () {
      $(this)
        .find("span")
        .toggleClass("icon__dcu-up-arrow icon__dcu-down-arrow");
    });
    renderbazaarVoice();
    $("#bazaarVoice").toggle();
  });

  $(".reviews-page").on("keyup", function (e) {
    if (e.keyCode === 13) {
      $(this).click();
    }
  });

  $(".reviews-page").each(function () {
    if ($(this).text().trim() === "") {
      $(this).empty();
    }
  });
  $(".reviews .next-txt, .reviews .previous-txt").on("click", function () {
    setTimeout(function () {
      $(".plp-reviews .slick-current").attr("tabindex", -1);
    }, 500);
  });
};

function triggerReviews() {
  if ($(".plp-reviews").length) {
    dcu.site.reviews();
  }
}

$(document).ready(function () {
  triggerReviews();
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.peopleShopped = function () {
  var $peopleShopped = $(".people-shopped"),
    $progressBarCentered = $(".people-shopped .progress"),
    $sliderControlsCentered = $(".people-shopped .slider-controls-centered"),
    $sliderItem = $(".people-shopped .slider__item"),
    $next = $(".people-shopped .next"),
    $previous = $(".people-shopped .previous"),
    $windowWidth = $(window).outerWidth(),
    showHideControls,
    progressBar;

  var sliderControls = function () {
    var progressBarWidth;

    $sliderControlsCentered.css({ width: $sliderItem.outerWidth() });
    if ($(window).outerWidth() > 992) {
      progressBarWidth =
        $sliderControlsCentered.width() -
        ($next.outerWidth() + $previous.outerWidth());
    } else {
      progressBarWidth = $sliderItem.outerWidth();
    }
    $progressBarCentered.css({
      width: progressBarWidth,
    });
  };
  showHideControls = function (
    $windowWidth,
    $currSliderItem,
    $currSliderControlsCentered
  ) {
    if (
      ($currSliderItem.length < 5 && $windowWidth > 992) ||
      ($currSliderItem.length < 2 && $windowWidth <= 992)
    ) {
      $currSliderControlsCentered.addClass("invisible");
    } else {
      $currSliderControlsCentered.removeClass("invisible");
    }
  };
  function fillProgressBar(
    calc,
    $progressBarCentered,
    $progressBarLabelCentered
  ) {
    $progressBarCentered
      .css("background-size", calc + "% 100%")
      .attr("aria-valuenow", calc);
    $progressBarLabelCentered.text(calc + "% completed");
  }

  progressBar = function (
    $sliderCentered,
    $progressBarCentered,
    $progressBarLabelCentered
  ) {
    $sliderCentered.on(
      "beforeChange",
      function (event, slick, currentSlide, nextSlide) {
        var calc;
        if ($(window).outerWidth() < 993) {
          calc = (nextSlide / (slick.slideCount - 1)) * 100;
        } else if (
          $(window).outerWidth() >= 993 &&
          $(window).outerWidth() < 1100
        ) {
          calc = ((nextSlide + 2) / (slick.slideCount - 1)) * 100;
        } else {
          calc = ((nextSlide + 3) / (slick.slideCount - 1)) * 100;
        }
        fillProgressBar(calc, $progressBarCentered, $progressBarLabelCentered);
      }
    );
  };

  $peopleShopped.each(function () {
    var _this = $(this),
      $currSliderCentered = _this.find(".slider-centered"),
      $currProgressBarCentered = _this.find(".progress"),
      $currProgressBarLabelCentered = _this.find(
        ".slider__label",
        ".slider-controls-centered"
      ),
      $currSliderControlsCentered = _this.find(".slider-controls-centered"),
      $currSliderItem = _this.find(".slider__item"),
      $currNext = _this.find(".next"),
      $currPrevious = _this.find(".previous"),
      slickOptions = {
        slidesToShow: 4,
        slidesToScroll: 1,
        speed: 400,
        centerPadding: "26px",
        prevArrow: $($currPrevious, $currSliderControlsCentered),
        nextArrow: $($currNext, $currSliderControlsCentered),
        infinite: false,
        mobileFirst: true,
        responsive: [
          {
            breakpoint: 319,
            settings: {
              centerPadding: "26px",
              slidesToShow: 1,
              centerMode: true,
            },
          },
          {
            breakpoint: 719,
            settings: {
              centerPadding: "44px",
              slidesToShow: 1,
              centerMode: true,
            },
          },
          {
            breakpoint: 992,
            settings: {
              slidesToShow: 3,
              centerMode: false,
            },
          },
          {
            breakpoint: 1100,
            settings: {
              slidesToShow: 4,
              centerMode: false,
            },
          },
        ],
      };

    $currSliderCentered.slick(slickOptions);

    showHideControls(
      $windowWidth,
      $currSliderItem,
      $currSliderControlsCentered
    );

    progressBar(
      $currSliderCentered,
      $currProgressBarCentered,
      $currProgressBarLabelCentered
    );
  });

  sliderControls();
  $(window).on("resize orientationchange", function () {
    setTimeout(function () {
      var $windowWidth = $(window).outerWidth();
      $peopleShopped.each(function () {
        var _this = $(this),
          $currSliderItem = _this.find(".slider__item"),
          $currSliderControlsCentered = _this.find(".slider-controls-centered");
        showHideControls(
          $windowWidth,
          $currSliderItem,
          $currSliderControlsCentered
        );
      });

      sliderControls();
    }, 200);
  });
  //TODO move to global function
  $(".slick-arrow").on("keyup", function (e) {
    if (e.keyCode === 13) {
      $(this).click();
    }
  });
};

$(document).ready(function () {
  if ($(".people-shopped").length) {
    dcu.site.peopleShopped();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.chatOpenWindow = function (chatInfo) {
  screenWidth = screen.width; //gets the screen width
  screenHeight = screen.height; //gets the screen height
  rightEdge = screenWidth - 380; //places the right edge of the chat box at the right border
  bottomEdge = screenHeight - 500; //places the bottom edge of the chat box at the bottom border

  //Browser info for a chat box width of 360 and height of 400
  browserInfo =
    "toolbar=no,scrollbars=yes,resizable=yes,menubar=no,location=no,status=no,top=" +
    bottomEdge +
    ",left=" +
    rightEdge +
    ",width=360,height=400";

  //Opens the window
  window.open(chatInfo, "_blank", browserInfo);
};

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.disclaimer = function () {
  var setCurrentDate, setNextDate, calculateDate;
  setCurrentDate = function () {
    $(".date-disclaimer").each(function () {
      var disclaimerStr = $(this).html(),
        currDateStr = "{currentdate}",
        currDate = "",
        date = new Date(),
        newDisclaimerStr = disclaimerStr;

      if (disclaimerStr.indexOf(currDateStr) != -1) {
        currDate = calculateDate(date);
        newDisclaimerStr = disclaimerStr.replace(/{currentdate}/gi, currDate);
      }

      newDisclaimerStr = setNextDate(newDisclaimerStr);
      $(this).html(newDisclaimerStr);
    });
  };
  setNextDate = function (newDisclaimerStr) {
    var matcherNextDate = new RegExp(/\{currentdate(,(\d+))\}/),
      _newDisclaimerStr = newDisclaimerStr,
      match = matcherNextDate.exec(_newDisclaimerStr),
      nextDate,
      nextDateStr,
      days,
      dateSecond;

    if (match) {
      nextDateStr = match[0];
      days = parseInt(matcherNextDate.exec(nextDateStr)[2], 10);
      dateSecond = new Date();
      dateSecond.setDate(dateSecond.getDate() + days);
      nextDate = calculateDate(dateSecond);
      _newDisclaimerStr = _newDisclaimerStr.replace(nextDateStr, nextDate);
    }

    return _newDisclaimerStr;
  };

  calculateDate = function (date) {
    var months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      newDate =
        months[date.getMonth()] +
        " " +
        date.getDate() +
        ", " +
        date.getFullYear();

    return newDate;
  };
  setCurrentDate();
};

$(document).ready(function () {
  if ($(".date-disclaimer").length) {
    dcu.site.disclaimer();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.chatHoliday = function () {
  var currentPath = $(".contactBanner .plp-contact-banner").data("currentpath");
  var isChatDisabled = $(".contactBanner .plp-contact-banner").data(
    "ischatdisabled"
  );
  if (isChatDisabled) {
    $(".plp-contact-banner .working-hour").hide();
    $(".plp-contact-banner .outside-working-hour").show();
  } else {
    $.ajax({
      type: "GET",
      url: "/bin/dcu/pegachat",
      data: "chatResourcePath=" + currentPath,
      dataType: "json",
      success: function (data, textStatus, jqXHR) {
        var jsonData = data;
        if (!$.isEmptyObject(jsonData)) {
          if (!chatAvailable(jsonData) || isChatDisabled) {
            $(".plp-contact-banner .working-hour").hide();
            $(".plp-contact-banner .outside-working-hour").show();
          } else {
            $(".plp-contact-banner .outside-working-hour").hide();
            $(".plp-contact-banner .working-hour").show();
          }
          $(".plp-contact-banner .working-hour a").on(
            "keypress click",
            function (e) {
              var chatInfo = $(this).attr("data-src-url"); //"https://www.dcu.org/chat-session.html";
              $(this).blur();
              dcu.site.chatOpenWindow(chatInfo);
            }
          );
          if ($(".chat-link").length && !chatAvailable(jsonData)) {
            $(".chat-link").closest("li").remove();
          }
          $(".chat-link").on("keypress click", function (e) {
            var chatInfo = $(this).attr("data-src-url"); //"https://www.dcu.org/chat-session.html";
            dcu.site.chatOpenWindow(chatInfo);
          });
          function chatAvailable(json) {
            var daylightSavingsTime =
              json.dayLightSavings != undefined ? json.dayLightSavings : false;
            var holiday = json.holidays;
            var isChatAvailable,
              //Determine the day, hour and day of month according to Greenwich Mean Time
              date = new Date(),
              day = date.getUTCDay(), //format: Sunday is 0, Monday is 1, etc.
              month = date.getMonth(), //format: January is 0, Feb is 1, etc.
              dayOfMonth = date.getUTCDate(), // format: 1-31
              GMThour = date.getUTCHours(), // Gets Greenwich Mean Time hour
              GMTMinutes = date.getUTCMinutes(),
              DCUhour;

            //console.log("day "+day+" month "+month+" dayOfMonth "+ dayOfMonth +"  GMThour "+GMThour+" GMTMinutes "+GMTMinutes );
            //Make provision for 8pm, 9pm and 10pm NCU time
            if (GMThour === 0) {
              //Therefore if GMThour is midnight
              GMThour = 24;
              day = day - 1; //Since is next day in GMT, reduce by one for NCU day
              dayOfMonth = dayOfMonth - 1;
            } else if (GMThour === 1) {
              //Therefore if GMThour is 1am
              GMThour = 25;
              day = day - 1; //Since is next day in GMT, reduce by one for NCU day
              dayOfMonth = dayOfMonth - 1;
            } else if (GMThour === 2) {
              //Therefore if GMThour is 2am
              GMThour = 26;
              day = day - 1; //Since is next day in GMT, reduce by one for NCU day
              dayOfMonth = dayOfMonth - 1;
            } else if (GMThour === 3) {
              //Therefore if GMThour is 3am
              GMThour = 27;
              day = day - 1; //Since is next day in GMT, reduce by one for NCU day
              dayOfMonth = dayOfMonth - 1;
            }

            //Make provision for Daylight Savings Time
            if (daylightSavingsTime == "true") {
              DCUhour = GMThour - 4; // Since GMT is 4 hours ahead of EDT, Convert GMT to EDT}
            } else {
              DCUhour = GMThour - 5; // Since GMT is 5 hours ahead of EST, Convert GMT to EST}
            }

            //Is the day New Years Eve after 5PM (Decembeer 31th, 2019)? If so, remove chat.
            if (month === 11 && dayOfMonth === 31 && DCUhour >= 17) {
              // month format is 0,1,2, ... Day format is 1,2,3 ... Hour format is 0-23
              isChatAvailable = false;
            }

            //Look for normal business hours and open chat box

            //If not a holiday, is the day M-F and hours 8am to 9pm when NCU is open? If so, display chat box.
            else if (DCUhour >= 8 && DCUhour < 21 && day > 0 && day < 6) {
              //day format is 0,1,2,3,4 ... Hour format is 0-23
              if (holiday != undefined && !checkHoliday(DCUhour, holiday)) {
                isChatAvailable = true;
              }
            }

            //Is the day Saturday and hours 9am to 3pm when NCU is open? If so, display chat box
            else if (DCUhour >= 9 && DCUhour < 15 && day === 6) {
              //day format is 0,1,2,3,4 ... Hour format is 0-23
              if (holiday != undefined && !checkHoliday(DCUhour, holiday)) {
                isChatAvailable = true;
              }
            }
            //If outside of chat hours, hide the chat box
            else {
              isChatAvailable = false;
            }

            return isChatAvailable;
          }
          function checkHoliday(dcuHour, holidays) {
            var holidayIn = false;
            //Determine the day, hour and day of month according to Greenwich Mean Time
            var date = new Date(),
              month = date.getMonth(), //format: January is 0, Feb is 1, etc.
              dayOfMonth = date.getUTCDate(), // format: 1-31
              GMTMinutes = date.getUTCMinutes();
            //Look for holidays in NCU time and exclude them from Live Chat
            if (holidays != undefined) {
              $.each(holidays, function (i, item) {
                var holidayDate,
                  holidayTime,
                  holidayMonth,
                  holidaydayOfMonth,
                  holidayHours,
                  holidayMinutes;
                if (
                  item.holidayDate != undefined &&
                  item.holidayDate != "" &&
                  item.holidayDate != null
                ) {
                  holidayDate = new Date(item.holidayDate);
                  holidayMonth = holidayDate.getMonth(); //format: January is 0, Feb is 1, etc.
                  holidaydayOfMonth = holidayDate.getUTCDate(); // format: 1-31
                }
                if (
                  item.holidayTime != undefined &&
                  item.holidayTime != "" &&
                  item.holidayTime != null
                ) {
                  holidayTime = new Date(item.holidayTime);
                  holidayHours = holidayTime.getHours(); //format: January is 0, Feb is 1, etc.
                  holidayMinutes = holidayTime.getUTCMinutes(); // format: 1-31
                }
                if (
                  holidayDate != undefined &&
                  holidayMonth == month &&
                  holidaydayOfMonth == dayOfMonth
                ) {
                  if (
                    holidayTime != undefined &&
                    holidayHours == dcuHour &&
                    GMTMinutes >= holidayMinutes
                  ) {
                    holidayIn = true;
                    return;
                  } else if (
                    holidayTime != undefined &&
                    dcuHour > holidayHours
                  ) {
                    holidayIn = true;
                    return;
                  } else if (
                    holidayTime == undefined &&
                    holidayDate != undefined
                  ) {
                    holidayIn = true;
                    return;
                  }
                }
              });
            }
            return holidayIn;
          }
        }
      },
      error: function (XMLHttpRequest, textStatus, errorThrown) {
        console.log("Error in Ajax call");
      },
    });
  }
};

$(document).ready(function () {
  "use strict";

  if ($(".plp-contact-banner").length) {
    dcu.site.chatHoliday();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.offeringsTabs = function () {
  var changeTabHeadImage = function () {
    var selectedImgSrc,
      originalImgSrc,
      tabLink = $(".our-offerings--tab__link"),
      activeTab = $(".our-offerings--tab__link.active"),
      tabLinkImg = $(".our-offerings--tab__link--icon");

    if (tabLinkImg.length) {
      if (activeTab) {
        selectedImgSrc = activeTab.find(tabLinkImg).data("selected-img");
        activeTab.find(tabLinkImg).attr("src", selectedImgSrc);
      }

      tabLink.click(function () {
        selectedImgSrc = $(this).find(tabLinkImg).data("selected-img");
        tabLink.each(function () {
          var _this = $(this);
          originalImgSrc = _this.find(tabLinkImg).data("original-img");

          _this.find(tabLinkImg).attr("src", originalImgSrc);
        });

        $(this).find(tabLinkImg).attr("src", selectedImgSrc);
      });
    }
  };
  changeTabHeadImage();
  var setCardTabIndex = function (tabIndex) {
    $(".our-offerings--content .tab-pane:eq(" + tabIndex + ")")
      .find("a")
      .each(function (index) {
        $(this).attr("tabindex", parseInt(index, 0) + 2);
        console.log("card : element" + index + "tabindex" + index + 2);
      });
  };
  var removeCardTabIndex = function (tabIndex) {
    $(".our-offerings--content .tab-pane:eq(" + tabIndex + ")")
      .find("a")
      .each(function () {
        $(this).removeAttr("tabindex");
      });
  };
  var setUpTabbing = function () {
    var nextTabIndex, currTabIndex;
    $(".our-offerings--tab__link").on("keyup", function (e) {
      currTabIndex = parseInt($(".our-offerings--tab__link").index(this), 0);
      if (
        e.which === 13 &&
        $(".our-offerings--tab__link").length > currTabIndex + 1
      ) {
        setCardTabIndex(currTabIndex);
        nextTabIndex =
          parseInt(
            $(".our-offerings--content .tab-pane:eq(" + currTabIndex + ")")
              .find("a")
              .last()
              .attr("tabIndex"),
            0
          ) + 1;
        $(".our-offerings--tab__link:eq(" + currTabIndex + ")").attr(
          "tabindex",
          1
        );
        $(".our-offerings--tab__link:eq(" + (currTabIndex + 1) + ")").attr(
          "tabindex",
          nextTabIndex
        );
        $(".our-offerings--tab__link:gt(" + (currTabIndex + 1) + ")").attr(
          "tabindex",
          -1
        );
      } else if (e.which === 9) {
        removeCardTabIndex(currTabIndex - 1);
        $(".our-offerings--tab__link").removeAttr("tabindex");
      }
    });
  };
  setUpTabbing();
};
$(document).ready(function () {
  if ($(".our-offerings--tab").length) {
    var ourOfferings = $(".our-offerings");
    dcu.site.offeringsTabs();
    dcu.site.generateComponentDynamicId(ourOfferings, false, true);
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.contactTabControl = function (tabSet) {
  var tabs = tabSet;
  if (tabs.is(":visible")) {
    tabs.find("a").on("click", function (event) {
      event.preventDefault();
      var target = $(this).attr("href"),
        tabs = $(this).parents(".tabs"),
        buttons = tabs.find("a"),
        item = tabs.parents(".tabbed-content").find(".item");
      buttons.removeClass("active");
      item.removeClass("active");
      $(this).addClass("active");
      $(target).addClass("active");
    });
  } else {
    $(".item")
      .on("click", function (e) {
        e.preventDefault();
        if (e.handled !== true) {
          // This will prevent event triggering more then once
          e.handled = true;
        } else {
          return false;
        }
        var container = $(this).parents(".tabbed-content"),
          $this = $(this);
        if ($this.hasClass("active") && $(e.target).hasClass("item")) {
          $this.removeClass("active");
          $(".item.active").removeClass("active");
        } else {
          $(".item.active").removeClass("active");
          $this.closest(".item").addClass("active");
        }
        if ($(e.target).hasClass("item")) {
          var toTop = container.offset().top - $(".brand-header--nav").height();
          $("html, body").animate(
            {
              scrollTop: toTop,
            },
            200
          );
        }
      })
      .on("click", "a", function (e) {
        e.stopPropagation();
      });
  }
  var resizeTimer;
  $(window).on("resize", function () {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(function () {
      dcu.site.contactTabControl(tabSet);
    }, 250);
  });
};

dcu.site.contactUsValidation = function () {
  var modifyRedirectURL,
    modifyURL = true,
    redirectURL = $("#contactUsFeedbackForm").find("#redirectURL");
  modifyRedirectURL = function () {
    var redirectURLValue = redirectURL.val(),
      domainURLValue = window.location.protocol + "//" + window.location.host;
    redirectURLValue = domainURLValue + redirectURLValue;
    redirectURL.val(redirectURLValue);
    modifyURL = false;
  };
  $.validator.addMethod("noSpam", function (value) {
    return !/(href|<a)+/.test(value);
  });

  $.validator.addMethod("phoneUS", function (value, element) {
    value = value.replace(/\s+/g, "");
    return (
      this.optional(element) ||
      (value.length > 9 &&
        value.match(
          /^(\+?1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/
        ))
    );
  });

  $("#contactUsFeedbackForm").validate({
    debug: false,
    submitHandler: function (form) {
      $("#modalAlert").modal({
        show: true,
        backdrop: "static",
        focus: true,
      });
      $("#contactSubmit").click(function () {
        if (modifyURL) {
          modifyRedirectURL();
        }
        form.action =
          "https://www.dcuinsurance.com/dcu-insurance/scripts/submit_contact_form.php";
        form.submit();
      });
    },
    rules: {
      First_Name: {
        required: true,
        noSpam: true,
      },
      Last_Name: {
        required: true,
        noSpam: true,
      },
      Email_Address: {
        required: true,
        email: true,
      },
      Daytime_Phone: {
        required: true,
        phoneUS: true,
      },
      Message: {
        noSpam: true,
      },
      Best_Time_Contact: {
        noSpam: true,
      },
    },
    messages: {
      First_Name: {
        required: "Required",
        noSpam: "No links or images",
      },
      Last_Name: {
        required: "Required",
        noSpam: "No links or images",
      },
      Email_Address: {
        required: "Required",
        email: "Please enter valid email address",
      },
      Daytime_Phone: {
        required: "Required",
        phoneUS: "Please specify a valid phone number",
      },
      Message: {
        noSpam: "No links or images",
      },
      Best_Time_Contact: {
        noSpam: "No links or images",
      },
    },
  });
};

$(document).ready(function () {
  if ($(".contactus").length) {
    if (window.location.hash) {
      setTimeout(function () {
        window.scrollTo(0, 0);
      }, 1);
    }
    dcu.site.contactTabControl($(".tabbed-content").find(".tabs"));
    var getLocation = window.location.hash,
      custLocation = getLocation.split("")[0];
    if (custLocation === "#") {
      if ($(window).width() > 992) {
        $(".contactus .tabbed-content .tabs li a").each(function () {
          if ($(this).attr("href") === window.location.hash) {
            $(this).trigger("click");
          }
        });
      } else {
        $(".tabbed-content > section").each(function () {
          if ($(this).hasClass("active")) {
            $(this).removeClass("active");
          }
        });
        $(getLocation).addClass("active");
      }
    } else {
      // do nothing
    }
  }
  if ($("#contactUsFeedbackForm").length) {
    dcu.site.contactUsValidation();
    $("a.form-submit").click(function () {
      $("#contactUsFeedbackForm").submit();
    });
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.search = function () {
  var searchInput = $(".searchModal .js-typeahead-search"),
    searchURL = searchInput.data("response-url"),
    searchAutoSuggestionLimit = searchInput.data("auto-suggestion-limit"),
    searchResultsShown = $(".searchModal .search-results").data(
      "search-results"
    ),
    searchTermArr,
    searchTerm,
    json_str,
    handleSearchValues,
    setCookie,
    getSearchCookie,
    recentSearch = $(".recent-searches"),
    recentSearchElement = $(".recent-searches .row"),
    recentSearchLimit = parseInt(
      $(".recent-searches").data("max-recent-items")
    ),
    recentSearchSet,
    noRecentSearch = $(".recent-search-availablity"),
    fetchSearchResults,
    searchLink = $(
      '.brand-header--nav__tertiary > ul > li > a[title="Search"]'
    ),
    searchModal = $(".searchModal"),
    searchClose = $(".search-close"),
    searchDefault = $(".searchModal--content__defaultState"),
    searchResult = $(".searchModal--content__resultState"),
    searchLinkNotFound = $(".search-link-notfound"),
    searchcontactBlock = $(".searchModal--bottom"),
    isPageLoaded = true,
    modifyDisplayText,
    renderRecentSearch,
    handleEventRecentSearchItem,
    addRecentSearchValues,
    searchIncorrect = $(".search-link-incorrect"),
    spellCheck = true,
    defaultOffset = 0,
    defaultStartPagination = 1,
    sortByDefaultValue = $("#sortby").data("sort-by-default"),
    sortByCurrValue = sortByDefaultValue,
    sortByDefaultOnLoadVal = $("#sortby .default-sortby").text(),
    searchFilterMenu = $(".search-filter__menu"),
    filterDefaultValue = searchFilterMenu.data("default-filter"),
    filterCurrValue = filterDefaultValue,
    defaultFilterSelect,
    defaultSortSelect,
    showPagination,
    handleSearchContactBanner,
    currSearchTerm = "",
    drawPagination,
    totalResults = 0,
    searchLinkWrap = $(".search-links"),
    loader = $(".loader"),
    loaderFocus = $(".loader a"),
    resultsShown = false,
    setTabbing,
    htmlEncode;

  // Adds recent search values on pageload
  addRecentSearchValues = function () {
    var recentSearchedVal = getSearchCookie();
    searchTermArr = recentSearchedVal || [];
    isPageLoaded = false;
  };
  //Sets the cookie for the searched terms
  setCookie = function (term) {
    json_str = JSON.stringify(term);
    Cookies.set("searchTerm", json_str, {
      expires: 999,
    });
  };
  //Gets the cookie for search term and parses the same
  getSearchCookie = function () {
    var getCookieVal = Cookies.get("searchTerm"),
      parse_json = getCookieVal && JSON.parse(getCookieVal);
    return parse_json;
  };
  // Handles browser events for the recent search items
  handleEventRecentSearchItem = function (recentSearch) {
    var recentSearchItem = recentSearch.find(".recent-search-item a"),
      searchTerm;
    recentSearchItem.on("click", function (e) {
      e.preventDefault();
      searchTerm = $(this).data("search-text");
      searchInput.val(searchTerm);
      fetchSearchResults(
        searchTerm,
        sortByCurrValue,
        filterCurrValue,
        false,
        defaultOffset,
        false,
        defaultStartPagination,
        true
      );

      $(".typeahead__cancel-button").addClass("typeahead-cancel");
    });
    $(".typeahead__cancel-button").on("click", function () {
      $(this).removeClass("typeahead-cancel");
    });
    $(".js-typeahead-search").on("focusout", function () {
      $(".typeahead__cancel-button").removeClass("typeahead-cancel");
    });
  };
  // Renders the recent searches, if any exists
  renderRecentSearch = function () {
    searchIncorrect.hide();
    recentSearchElement.empty();
    recentSearchSet = getSearchCookie();
    if (
      !recentSearchSet ||
      recentSearchSet === "" ||
      recentSearchSet === undefined ||
      recentSearchSet.length < 1
    ) {
      noRecentSearch.show();
      recentSearch.hide();
      return false;
    } else {
      noRecentSearch.hide();
      recentSearch.show();
      searchLinkNotFound.hide();
    }
    var recentListItem;
    var iterationCount = Math.min(recentSearchSet.length, recentSearchLimit);

    if (iterationCount > 5) {
      recentSearchElement.append(
        "<ul class='col-12 col-md-6 recent-search-col-1'></ul><ul class='col-12 col-md-6 recent-search-col-2'></ul>"
      );
    } else {
      recentSearchElement.append(
        "<ul class='col-12 recent-search-col-1'></ul>"
      );
    }
    for (var i = 0; i < iterationCount; i++) {
      recentListItem =
        "<li class='recent-search-item'><a href='javascript;;' aria-label='" +
        recentSearchSet[i] +
        "' data-search-text='" +
        recentSearchSet[i] +
        "'>" +
        recentSearchSet[i] +
        "</a></li>";
      if (i < 5) {
        recentSearchElement
          .find("ul.recent-search-col-1")
          .append(recentListItem);
      } else {
        recentSearchElement
          .find("ul.recent-search-col-2")
          .append(recentListItem);
      }
    }

    if (recentSearchElement.find(".recent-search-item").length) {
      handleEventRecentSearchItem(recentSearch);
    }
  };

  // Handles search values when users types in the search box for recent searches
  handleSearchValues = function (searchTerm) {
    if (searchTermArr.indexOf(searchTerm) > -1 || searchTerm.trim() === "") {
      return;
    } else {
      if (searchTermArr.length === recentSearchLimit) {
        searchTermArr.pop();
      }
      searchTermArr.unshift(searchTerm);
    }
  };

  drawPagination = function (startVal, selectedItem, pages, offset) {
    var paginationHTML;
    var endVal;
    var itemsPerPage = searchResultsShown;
    var remainingPages = pages - startVal;
    if (pages <= 10) {
      startVal = 1;
      endVal = pages;
    } else {
      endVal = startVal + 9;
    }
    if (remainingPages < 9 && pages > 10) {
      startVal = pages - 9;
    }

    for (var i = startVal; i <= pages; i++) {
      if (selectedItem === i) {
        paginationHTML = "<strong class='selected page'>" + i + "</strong>";
      } else {
        paginationHTML =
          '<a href="javascript:void(0)" class="page" data-offset-val="' +
          (i - 1) * itemsPerPage +
          '" data-start-val="' +
          startVal +
          '">' +
          i +
          "</a>";
      }
      if (selectedItem != pages) {
        $(".result-next").show();
      }
      if (selectedItem != 1) {
        $(".result-prev").show();
      }

      if (i > endVal && pages > 10) {
        break;
      } else {
        $(".paging-numbers").append(paginationHTML);
      }
    }
    $(".search-pagination").show();
  };
  var searchScrollTop = function () {
    var position = $("#pagingResults").position();
    $(".searchModal").scrollTop(position.top);
  };
  setTabbing = function () {
    var searchInput = searchModal
        .find("select, input, button, a")
        .filter(":visible"),
      firstInputElement = searchInput.first(),
      lastInputElement = searchInput.last();

    lastInputElement.on("keydown", function (e) {
      if (e.which === 9 && !e.shiftKey) {
        e.preventDefault();
        firstInputElement.focus();
      }
    });

    firstInputElement.on("keydown", function (e) {
      if (e.which === 9 && e.shiftKey) {
        e.preventDefault();
        lastInputElement.focus();
      }
    });
  };
  $(document).on("click touchend", ".paging-numbers a.page", function (e) {
    e.preventDefault();
    e.stopPropagation();
    spellCheck = false;
    var currOffset = $(this).data("offset-val"),
      newStartVal = 1,
      currVal = parseInt($(this).text());
    searchTerm = currSearchTerm;

    if (currVal >= 6) {
      newStartVal = currVal - 5;
    }
    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      false,
      currOffset,
      false,
      newStartVal,
      false
    );
    searchScrollTop();
    return false;
  });
  $(".result-next a").on("click", function (e) {
    e.preventDefault();
    e.stopPropagation();
    spellCheck = false;
    searchTerm = currSearchTerm;
    var selectedVal = parseInt($(".paging-numbers .selected").text()),
      newStartVal = 1,
      currOffset = selectedVal * searchResultsShown;

    if (selectedVal >= 5) {
      newStartVal = selectedVal - 4;
    }
    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      false,
      currOffset,
      false,
      newStartVal,
      false
    );
    searchScrollTop();
  });
  $(".result-prev a").on("click", function (e) {
    e.preventDefault();
    e.stopPropagation();
    spellCheck = false;
    searchTerm = currSearchTerm;
    var selectedVal = parseInt($(".paging-numbers .selected").text()),
      newStartVal = 1,
      currOffset = (selectedVal - 2) * searchResultsShown;
    if (selectedVal > 6) {
      newStartVal = selectedVal - 6;
    }

    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      false,
      currOffset,
      false,
      newStartVal,
      false
    );
    searchScrollTop();
  });

  //Pagination handling
  showPagination = function (currOffset, newStartVal, totalResults) {
    var pages = Math.ceil(totalResults / searchResultsShown),
      selectedItem = currOffset / searchResultsShown + 1;
    $(".paging-numbers").empty();
    $(".result-next").hide();
    $(".result-prev").hide();
    if (totalResults === 0) {
      return false;
    }
    if (pages > 1) {
      drawPagination(newStartVal, selectedItem, pages, currOffset);
    }
  };
  htmlEncode = function (s) {
    var encodedStr = "";
    if (s != undefined && s != null) {
      encodedStr = s.replace(/[\u00A0-\u9999<>\&]/gim, function (i) {
        return "&#" + i.charCodeAt(0) + ";";
      });
    }
    return encodedStr;
  };
  // Fetches the search results on auto suggestion
  fetchSearchResults = function (
    searchTerm,
    sortby,
    tag,
    isFilter,
    offset,
    cookieFlag,
    startPagination,
    isRecentLink
  ) {
    if (searchTerm === "") {
      return false;
    }

    var searchResultURL = "/bin/dcu/search",
      searchResultMisspelled = "/bin/dcu/spellCheckSearch",
      searchIncorrectVal = $(".search-correct-suggestion__value"),
      searchResultNotFound = $(".search-result__notfound"),
      searchResultBlock = $(".search-result__block"),
      searchUrlResponse = false,
      showLoader,
      hideLoader,
      encodedSearchTerm;
    encodedSearchTerm = htmlEncode(searchTerm);
    currSearchTerm = searchTerm;

    showLoader = function () {
      var screenHeight = $(window).height(),
        searchModalTopBarHeight = $(".searchModal--top").height(),
        loaderHeight = screenHeight - searchModalTopBarHeight;

      $(".typeahead__container").removeClass("result");
      searchModal.css("overflow", "hidden");
      loader.css("height", loaderHeight);
      loader.show();
      loaderFocus.focus();
    };
    hideLoader = function () {
      searchModal.css("overflow", "auto");
      loader.hide();
    };
    $.ajax({
      url: searchResultURL,
      method: "GET",
      async: true,
      data: {
        keyword: encodedSearchTerm,
        offset: offset,
        sortby: sortby,
        tags: tag,
        limit: searchResultsShown,
      },
      beforeSend: function () {
        showLoader();
      },
      success: function (response) {
        hideLoader();
        if (typeof _satellite == "object") {
          _satellite.track("search term", { searchTerm: encodedSearchTerm });
        }
        if (response.message === "OK") {
          searchUrlResponse = true;
          searchDefault.hide();
          searchResult.show();
          searchcontactBlock.show();
          searchResultBlock.show();
          searchResultNotFound.hide();
          searchLinkNotFound.hide();
          totalResults = response.totalHitsForQuery;
        } else {
          if (typeof _satellite == "object") {
            _satellite.track("search result", {
              searchTerm: htmlEncode(searchTerm),
              totalSearchResults: "0",
            });
          }
          resultsShown = false;
          searchTermArr.shift();
          searchUrlResponse = false;
          recentSearch.hide();
          noRecentSearch.hide();
          searchResultBlock.hide();
          if (spellCheck) {
            spellCheckTerm();
          } else {
            hideLoader();
            searchLinkNotFound.show();
            searchIncorrect.hide();
            recentSearch.hide();
            noRecentSearch.hide();
            searchResultBlock.hide();
            searchcontactBlock.show();
          }
          if (!isFilter) {
            searchResultNotFound.hide();
            searchDefault.show();
            searchResult.hide();
          } else {
            searchResultNotFound.show();
            searchResult.show();
            searchDefault.hide();
          }
          searchInput.blur();
          setTabbing();
          return false;
        }
      },
    }).done(function (response) {
      var resultItem,
        searchResultItemHTML,
        searchResultContent = searchResult.find(".search-results"),
        resultItemLinkPath,
        resultItemTitle,
        resultItemDesc;
      if (cookieFlag) {
        setCookie(searchTermArr);
      }
      if (response.message === "OK") {
        searchResultContent.empty();
        resultItem = response.resultList;
        modifyDisplayText(response);
        resultItem.forEach(function (resultItem) {
          resultItemLinkPath = resultItem.path || "";
          resultItemTitle = resultItem.title || "";
          resultItemDesc = resultItem.description || "";
          searchResultItemHTML =
            "<div class='row search-results--item'><div class='col-1 search-icon pad0'><img src='/etc.clientlibs/dcu/clientlibs/clientlib-site/resources/images/search-icon.png'></div><div class='col-11 pad0'><a href='" +
            resultItemLinkPath +
            "' target='_blank' class='search-results--item__title'>" +
            resultItemTitle +
            "</a><p class='search-results--item__caption'>" +
            resultItemDesc +
            "</p></div></div>";
          searchResultContent.append(searchResultItemHTML);
        });
        showPagination(offset, startPagination, totalResults);
        if (!isRecentLink) {
          searchInput.blur();
        }
        setTabbing();
      } else {
        return false;
      }
    });
    //Did you mean
    var spellCheckTerm = function () {
      $.ajax({
        url: searchResultMisspelled,
        method: "GET",
        data: {
          word: searchTerm,
        },
        beforeSend: function () {
          showLoader();
        },
        success: function (response) {
          hideLoader();
          searchIncorrectVal.empty();
          response = JSON.parse(response);
          recentSearch.hide();
        },
        error: function (errorThrown) {
          hideLoader();
          searchLinkNotFound.show();
          searchIncorrect.hide();
          recentSearch.hide();
          noRecentSearch.hide();
          searchResultBlock.hide();
          searchcontactBlock.show();
        },
      }).done(function (response) {
        var resultItem, searchResultItemHTML;
        if (!searchUrlResponse) {
          if (response.length) {
            resultItem = JSON.parse(response);
            if (resultItem[0] !== "NA") {
              searchDefault.show();
              searchResult.hide();
              searchIncorrect.show();
              searchLinkNotFound.hide();
              for (var i = 0; i < resultItem.length; i++) {
                searchResultItemHTML =
                  "<a href='javascript:void(0)' aria-label='" +
                  resultItem[i] +
                  "' title='" +
                  resultItem[i] +
                  "' class='search-corrected-link'>" +
                  resultItem[i] +
                  "</a> ";
                searchIncorrectVal.append(searchResultItemHTML);
              }
            } else {
              searchIncorrect.hide();
              searchLinkNotFound.show();
            }
          } else {
            return false;
          }
        } else {
          return false;
        }
      });
      searchcontactBlock.show();
      if ($(window).width() < 993) {
        searchDefault.addClass("lt-grey-bg");
        searchLinkWrap.addClass("most-popular");
      }
    };
  };
  //Launch Search on click
  searchLink.on("click", function () {
    if (typeof _satellite == "object") {
      _satellite.track("search open");
    }
    searchModal.slideDown(600, function () {
      setTabbing();
    });

    $("body").addClass("no-scroll");
    addRecentSearchValues();
    renderRecentSearch();
    $(".brand-header--navbar__nav").find("a").attr("tabindex", "-1");
    $("<div class='search-layer'></div>").insertBefore(".searchModal");
  });
  //Open search model in mobile
  $(document).on("click touchend", ".icon-dcu-search", function () {
    searchModal.slideDown(600);
    if (typeof _satellite == "object") {
      _satellite.track("search open");
    }
    if ($(".login-form").is(":visible")) {
      $(".login-form").slideUp(600);
      $(".modal-overlay").remove();
      $("body").removeClass("no-scroll");
    }
    $("body").addClass("no-scroll");

    addRecentSearchValues();
    renderRecentSearch();
    $("<div class='search-layer'></div>").insertBefore(".searchModal");
  });
  //Hide Search On close click
  searchClose.on("click", function () {
    searchModal.slideUp(600, function () {
      searchInput.val("");
      searchLink.focus();
    });
    $(".brand-header--navbar__nav").find("a").removeAttr("tabindex");
    if ($(".mob-nav-close-icon").is(":visible")) {
      $(".mob-nav-close-icon").addClass("nav-hidden");
      $(".mob-nav-icon").removeClass("nav-hidden");
      $("body").removeClass("no-scroll");
    } else {
      $("body").removeClass("no-scroll");
    }
    if ($(".login-form").is(":visible")) {
      $("body").addClass("no-scroll");
    }
    if ($(".mob--nav__navblock").is(":visible")) {
      $(".mob--nav__navblock").hide();
    }
    if ($(".brand-header--level-2--con").hasClass("active")) {
      $(".brand-header--level-2--con.active").hide();
    }
    searchDefault.show();
    searchResult.hide();
    searchcontactBlock.hide();
    searchLinkNotFound.hide();
    $(".js-typeahead-search").val();
    defaultFilterSelect();
    sortByCurrValue = sortByDefaultValue;
    filterCurrValue = filterDefaultValue;
    $(".typeahead__container").removeClass("cancel");
    searchDefault.removeClass("lt-grey-bg");
    searchLinkWrap.removeClass("most-popular");
    $(".typeahead__cancel-button").removeClass("typeahead-cancel");
    $(".search-layer").remove();
  });
  //Sort by value replace
  $("body").on("click touchend", ".option li a", function () {
    var i = $(this).parents(".search-sortby").attr("id"),
      v = $(this).text();
    sortByCurrValue = $(this).data("sortby");
    $("#" + i + " .selected > strong").text(v);
    $(this).parent().parent().removeClass("show");
  });
  $(document).on("click touchend", ".search-corrected-link", function (e) {
    e.preventDefault();
    spellCheck = false;

    searchTerm = $(this).text();
    searchInput.val(searchTerm);
    handleSearchValues(searchTerm);
    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      false,
      defaultOffset,
      true,
      defaultStartPagination,
      false
    );
  });
  $(document).on("click touchend", ".search-sortby-val", function (e) {
    e.preventDefault();
    spellCheck = false;
    searchTerm = currSearchTerm;
    handleSearchValues(searchTerm);
    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      false,
      defaultOffset,
      false,
      defaultStartPagination,
      false
    );
  });
  $(".search-filter-val").on("click touchend", function (e) {
    e.preventDefault();
    spellCheck = false;
    searchTerm = currSearchTerm;
    filterCurrValue = $(this).data("filter") || filterDefaultValue;
    handleSearchValues(searchTerm);
    fetchSearchResults(
      searchTerm,
      sortByCurrValue,
      filterCurrValue,
      true,
      defaultOffset,
      false,
      defaultStartPagination,
      false
    );

    $(this)
      .closest(".search-filter__menu")
      .find("a.active")
      .removeClass("active");
    $(this).addClass("active");
  });
  //focus in out search field
  searchInput.data("holder", searchInput.attr("placeholder"));
  searchInput.focusin(function () {
    $(this).attr("placeholder", "");
  });
  searchInput.focusout(function () {
    $(this).attr("placeholder", $(this).data("holder"));
  });

  modifyDisplayText = function (response) {
    if (typeof _satellite == "object") {
      _satellite.track("search result", {
        searchTerm: htmlEncode(searchTerm),
        totalSearchResults: response.totalHitsForQuery,
      });
    }
    var searchDisplayTxt = $(".search-result-text").data("result-text"),
      findStr = ["{start}", "{end}", "{total}"],
      replaceStr = [
        response.startIndex,
        response.endIndex,
        response.totalHitsForQuery,
      ],
      newSearchDisplayTxt,
      searchDisplayHTML;
    for (var i = 0; i < findStr.length; i++) {
      newSearchDisplayTxt = searchDisplayTxt.replace(
        findStr[i],
        "<strong>" + replaceStr[i] + "</strong>"
      );
      searchDisplayTxt = newSearchDisplayTxt;
    }
    var ariaLabel = $(".search-result-text").data("result-text");
    searchDisplayHTML = "<p role='alert'>" + newSearchDisplayTxt + "</p>";
    setTimeout(function () {
      $(".search-result-text").find("p").remove();
      $(".search-result-text").append(searchDisplayHTML);
    }, 100);
  };
  defaultFilterSelect = function () {
    searchFilterMenu.find("a.active").removeClass("active");
    searchFilterMenu.find("li:first-child a").addClass("active");
  };
  defaultSortSelect = function () {
    $("#sortby .selected").find("strong").text(sortByDefaultOnLoadVal);
  };
  handleSearchContactBanner = function () {
    searchcontactBlock.find(".plp-contact-banner").removeAttr("id");
  };
  if (isPageLoaded) {
    handleSearchContactBanner();
    addRecentSearchValues();
  }
  searchLink.on("keydown", function (e) {
    if (e.keyCode === 9) {
      $(".focus-menu").focus();
    }
  });
  // Typeahead method for auto suggestion results
  $.typeahead({
    input: searchInput,
    order: "desc",
    minLength: 3,
    dynamic: true,
    debug: false,
    accent: true,
    //delay: 300,
    maxItem: false,
    source: {
      ajax: {
        method: "GET",
        url: searchURL,
        async: false,
        path: "resultList",
        data: {
          keyword: "{{query}}",
          limit: searchAutoSuggestionLimit,
        },
      },
    },
    callback: {
      onInit: function () {
        //console.log("Typeahead Initiated on " + node.selector);
        //resultsShown = false;
      },
      onShowLayout: function (node, query) {
        if (resultsShown) {
          node.closest("form").find(".typeahead__result").addClass("d-none");
        } else {
          node.closest("form").find(".typeahead__result").removeClass("d-none");
        }
        resultsShown = false;
      },
      onSearch: function (node) {
        node
          .closest("form")
          .find(".typeahead__result")
          .removeClass("d-none", function () {
            resultsShown = false;
          });
      },
      onSubmit: function (node, form, item, event) {
        event.preventDefault();
        searchTerm = searchInput.val();
        spellCheck = true;
        filterCurrValue = filterDefaultValue;
        sortByCurrValue = sortByDefaultValue;
        resultsShown = true;
        defaultFilterSelect();
        defaultSortSelect();
        handleSearchValues(searchTerm);
        fetchSearchResults(
          searchTerm,
          sortByCurrValue,
          filterCurrValue,
          false,
          defaultOffset,
          true,
          defaultStartPagination,
          false
        );
      },
      onClickBefore: function (node, a, item, event) {
        searchInput.val(a.text());
      },
      onClick: function (node, a, item, event) {
        searchInput.val(a.text());
      },
      onNavigateAfter: function (node, lis, a, item, query, event) {
        searchInput.val(a.text());
      },
      onClickAfter: function (node, a, item, event) {
        event.preventDefault;
        searchInput.val(a.text());
        searchTerm = searchInput.val();
        spellCheck = true;
        resultsShown = true;
        filterCurrValue = filterDefaultValue;
        sortByCurrValue = sortByDefaultValue;

        defaultFilterSelect();
        defaultSortSelect();
        handleSearchValues(searchTerm);
        fetchSearchResults(
          searchTerm,
          sortByCurrValue,
          filterCurrValue,
          false,
          defaultOffset,
          true,
          defaultStartPagination,
          false
        );
      },
      onCancel: function () {
        //clearSearchResults();
      },
    },
  });
  $(".input-group-btn button").on("keyup", function (e) {
    if (e.keyCode === 13) {
      $(".input-group-btn .dropdown-menu > li > a:eq(0)").focus();
    }
  });
};
$(document).ready(function () {
  "use strict";
  if ($(".searchModal").length) {
    dcu.site.search();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.interestRate = function () {
  "use strict";
  var listSize = $("#interestRateListSize").val();
  for (var i = 0; i < listSize; i++) {
    $("#rateForm" + i).submit(function (event) {
      event.preventDefault();

      var $form = $(this),
        newValue = $form.find('input[name="interestRate"]').val(),
        oldValue = $form.find('input[name="oldInterestRate"]').val(),
        checked = $form.find('input[name="isEnabled"]')[0].checked,
        url = $form.attr("action");

      var slingPost = $.post(url, {
        interestRate: newValue,
        oldInterestRate: oldValue,
        isEnabled: checked,
      });

      slingPost.done(function (data) {
        location.reload();
      });
    });
  }
};
$(document).ready(function () {
  "use strict";
  dcu.site.interestRate();
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.rateTable = function () {
  if ($(".fixed-th-table-wrapper").find("table tr:first-child td").length < 6) {
    $(".scrolled-td-table-wrapper, .fixed-th-table-wrapper")
      .find("table")
      .addClass("equal-table");
  }
};
$(document).ready(function () {
  "use strict";
  var rateTable = $(".rates-table");
  if ($(".fixed-th-table-wrapper").length) {
    dcu.site.rateTable();
  }
  dcu.site.generateComponentDynamicId(rateTable, false, true);
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.rteText = function () {
  var rtePara = $(".richText--content");
  if (rtePara.find("p").length > 0) {
    rtePara.find("p").addClass("bottomBar");
  } else {
    rtePara.find("h1").addClass("bottomBar");
  }
};
$(document).ready(function () {
  "use strict";
  if ($(".richText").length) {
    dcu.site.rteText();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.branchMap = function () {
  var branchDetailsMap = $("#branch-details-map"),
    latitude = branchDetailsMap.data("latitude"),
    longitude = branchDetailsMap.data("longitude"),
    initMap,
    initZoomControl,
    initMapTypeControl,
    alignCombinationComponent,
    isSafari,
    isIOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false,
    directionBaseURL = isIOS
      ? "maps://maps.google.com/maps?daddr="
      : "https://maps.google.com/maps?daddr=",
    directionURL = directionBaseURL + latitude + "," + longitude + "&amp;ll=";

  initMap = function () {
    var myLatLng = new google.maps.LatLng(latitude, longitude),
      myOptions = {
        zoom: 13,
        center: myLatLng,
        disableDefaultUI: true,
        mapTypeControlOptions: {
          mapTypeIds: [
            google.maps.MapTypeId.SATELLITE,
            google.maps.MapTypeId.ROADMAP,
          ],
        },
        mapTypeId: google.maps.MapTypeId.ROADMAP,
      },
      map = new google.maps.Map(
        document.getElementById("branch-details-map"),
        myOptions
      ),
      marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        icon:
          "/etc.clientlibs/dcu/clientlibs/clientlib-site/resources/images/location.png",
      });
    marker.setMap(map);
    initZoomControl(map);
    initMapTypeControl(map);
  };

  initZoomControl = function (map) {
    document.querySelector(".zoom-control-in").onclick = function () {
      map.setZoom(map.getZoom() + 1);
    };
    document.querySelector(".zoom-control-out").onclick = function () {
      map.setZoom(map.getZoom() - 1);
    };
    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(
      document.querySelector(".zoom-control")
    );
  };

  initMapTypeControl = function (map) {
    var mapTypeControlDiv = document.querySelector(".maptype-control");
    document.querySelector(".maptype-control-map").onclick = function () {
      mapTypeControlDiv.classList.add("maptype-control-is-map");
      mapTypeControlDiv.classList.remove("maptype-control-is-satellite");
      map.setMapTypeId("roadmap");
    };
    document.querySelector(".maptype-control-satellite").onclick = function () {
      mapTypeControlDiv.classList.remove("maptype-control-is-map");
      mapTypeControlDiv.classList.add("maptype-control-is-satellite");
      map.setMapTypeId("hybrid");
    };
    mapTypeControlDiv.style["transform"] = "rotate(-90deg)";
    map.controls[google.maps.ControlPosition.LEFT_TOP].push(mapTypeControlDiv);
  };
  alignCombinationComponent = function () {
    $(".combination-aem-container").css(
      "padding-left",
      $(".breadcrumb .container").css("marginLeft")
    );
  };
  isSafari = function () {
    var ua = navigator.userAgent.toLowerCase();
    if (ua.indexOf("safari") !== -1) {
      if (ua.indexOf("chrome") > -1) {
        return false;
      } else {
        return true;
      }
    }
  };

  initMap();

  $(".branch-map__direction-link").on("click", function (e) {
    e.preventDefault();
    window.open(directionURL);
  });

  function stylingOnAEM() {
    if (isSafari()) {
      $(".combinationlist").addClass("safariCombinationList");
    }
    $(".combinationlist")
      .parent()
      .parent()
      .addClass("combination-aem-container");
    $(".combinationlist").parent().addClass("combination-immediate-parent");
    $(".combinationlist")
      .parent()
      .parent()
      .parent()
      .addClass("banch-landing-aem-container");
    $(".branchMap").parent().parent().addClass("map-aem-container");
    $(".banch-landing-aem-container .richText").removeClass("grey-bg");
    //Align Combination list Container once dynamic classes are added
    alignCombinationComponent();
  }
  stylingOnAEM();
  $(window).on("resize orientationchange", function () {
    alignCombinationComponent();
  });
};

$(document).ready(function () {
  if ($(".branch-map").length) {
    $.getScript(
      "https://maps.googleapis.com/maps/api/js?key=AIzaSyDNsdlY76M9cdQlvvq_sVNmyZY0lm4s9VM",
      function () {
        dcu.site.branchMap();
      }
    );
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.priorities = function () {
  var _sliderNode = [],
    _priorities = $(".priorities"),
    $currentSlider,
    showHideControls;

  _sliderNode = $(".js-sliderCentered");
  showHideControls = function (_element, _item) {
    if (_item.length < 2) {
      _element.find(".slider-controls-centered").addClass("invisible");
    }
  };
  function progressFunc(slideID, progressBarElem, progressBarElemTxt) {
    slideID.on(
      "beforeChange",
      function (event, slick, currentSlide, nextSlide) {
        var calc = (nextSlide / (slick.slideCount - 1)) * 100;
        progressBarElem
          .css("background-size", calc + "% 100%")
          .attr("aria-valuenow", calc);
        progressBarElemTxt.text(calc + "% completed");
      }
    );
  }
  _sliderNode.each(function (i) {
    var $itemCount,
      $sliderCentered,
      $progressBarCentered,
      $progressBarLabelCentered,
      $sliderControlsCentered,
      $next,
      $previous,
      slickOptions;
    $(this)
      .closest(".slider-content")
      .attr("id", "sliderCentered" + i);
    $currentSlider = $("#" + $(this).attr("id"));
    $sliderCentered = $currentSlider.find(".slider-centered");
    $progressBarCentered = $currentSlider.find(".progress");
    $progressBarLabelCentered = $currentSlider.find(
      ".slider__label",
      ".slider-controls-centered"
    );
    $sliderControlsCentered = $currentSlider.find(".slider-controls-centered");
    $next = $currentSlider.find(".next");
    $previous = $currentSlider.find(".previous");
    $itemCount = $currentSlider.find(".slider-item");
    slickOptions = {
      slidesToShow: 1,
      slidesToScroll: 1,
      speed: 400,
      prevArrow: $($previous, $sliderControlsCentered),
      nextArrow: $($next, $sliderControlsCentered),
      mobileFirst: true,
    };
    progressFunc(
      $sliderCentered,
      $progressBarCentered,
      $progressBarLabelCentered
    );
    $sliderCentered.slick(slickOptions);
    showHideControls($(this), $itemCount);
  });
  if (_priorities.length > 1) {
    _priorities.each(function (i) {
      if (i == 0) {
        $(this).addClass("first");
      }
      if (i == _priorities.length - 1) {
        $(this).addClass("last");
      }
    });
  } else {
    _priorities.addClass("one");
  }
};
$(document).ready(function () {
  if ($(".priorities").length) {
    dcu.site.priorities();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.pageHero = function () {
  var windowWidth = $(window).width(),
    navHeight = $(".sticky-navbar").outerHeight() || 0,
    navHeaderHeight = $(".brand-header").outerHeight() || 0,
    navmobheader = $(".mob--nav").outerHeight() || 0,
    nonstickyPos = navHeight + navHeaderHeight + 32,
    nonstickyPosMob = navHeight + navmobheader + 90,
    getEnv,
    renderbazaarVoice;
  getEnv = function () {
    if (window.location.hostname.indexOf("www.dcu.org") === -1) {
      return "staging";
    } else {
      return "production";
    }
  };
  renderbazaarVoice = function () {
    var productId = $(".page-hero__reviews").data("productid");
    if (productId) {
      $("#bazaarVoice--page-hero .page-hero__reviews--content").attr(
        "data-bv-product-id",
        productId
      );
      // load bazaar voice script only once
      if (!window.BV) {
        var env = getEnv();
        $.getScript(
          "https://apps.bazaarvoice.com/deployments/digitalfederalcreditunion/main_site/" +
            env +
            "/en_US/bv.js",
          function () {}
        );
      }
    }
  };
  var renderReviewSection = function (windowWidth) {
    if (windowWidth <= 992) {
      $(".page-hero__reviews").appendTo(".breadcrumb-wrapper >.container");
    } else {
      $(".page-hero__reviews").appendTo(".page-hero__caption >.container");
    }
  };
  var scrollToReview = function (event) {
    event.preventDefault();
    var scrollHeight,
      hash = ".plp-reviews";
    if ($(hash).length > 0) {
      // Calculation of how much screen should scroll
      if ($(".sticky-navbar--fixed").length > 0) {
        scrollHeight = $(hash).offset().top - navHeight;
      } else if ($(".brand-header--navbar.sticky").length > 0) {
        if ($(window).outerWidth() <= 992) {
          scrollHeight =
            $(hash).offset().top - $(".mob--nav__header.sticky").outerHeight();
        } else {
          scrollHeight =
            $(hash).offset().top -
            $(".brand-header--navbar.sticky").outerHeight();
        }
      } else {
        if ($(window).outerWidth() <= 992) {
          scrollHeight = $(hash).offset().top - nonstickyPosMob;
        } else {
          scrollHeight = $(hash).offset().top - nonstickyPos;
        }
      }
      $("body, html").animate(
        {
          scrollTop: scrollHeight,
        },
        500
      );
    }
  };
  $(".page-hero__caption-desktop__rating-label").on("click", function (e) {
    e.preventDefault();
    scrollToReview(e);
    $(".plp-reviews .slick-active").focus();
  });
  renderbazaarVoice();
  renderReviewSection(windowWidth);
  $(window).on("resize orientationchange", function () {
    windowWidth = window.innerWidth;
    renderReviewSection(windowWidth);
  });
};
$(document).ready(function () {
  "use strict";
  if ($(".page-hero__reviews").length) {
    dcu.site.pageHero();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.dcuway = function () {
  $("[id=videoModal]").on("hidden.bs.modal", function () {
    $(this).find("video").get(0).pause();
  });
  $("[id=videoModal]").on("shown.bs.modal", function () {
    $(this).find("video").get(0).play();
  });
  var deskBackImagePath = $("#dcu-way-openModal").attr("data-BG");
  if (deskBackImagePath.startsWith(".transform")) {
    $("#dcu-way-openModal").css(
      "background-image",
      "linear-gradient(rgba(58,58,58,0.7), rgba(58,58,58,0.7))"
    );
  } else {
    $("#dcu-way-openModal").css(
      "background-image",
      "linear-gradient(rgba(58,58,58,0.7), rgba(58,58,58,0.7)), url(" +
        deskBackImagePath +
        ")"
    );
  }
  var mobileBackImagePath = $("#dcu-way-openMobileModal").attr("data-BG");
  if (mobileBackImagePath.startsWith(".transform")) {
    $("#dcu-way-openMobileModal").css(
      "background-image",
      "linear-gradient(rgba(58,58,58,0.7), rgba(58,58,58,0.7))"
    );
  } else {
    $("#dcu-way-openMobileModal").css(
      "background-image",
      "linear-gradient(rgba(58,58,58,0.7), rgba(58,58,58,0.7)), url(" +
        mobileBackImagePath +
        ")"
    );
  }
};

$(document).ready(function () {
  if ($(".dcu-way").length) {
    dcu.site.dcuway();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.culturalBenefit = function () {
  var $communityCarousel = $(".community-carousel"),
    $sliderCentered = $communityCarousel.find(".slider-centered"),
    $progressBarCentered = $communityCarousel.find(".progress"),
    $progressBarLabelCentered = $communityCarousel.find(
      ".slider__label",
      ".slider-controls-centered"
    ),
    $sliderControlsCentered = $communityCarousel.find(
      ".slider-controls-centered"
    ),
    $next = $communityCarousel.find(".next"),
    $previous = $communityCarousel.find(".previous"),
    currWindowWidth = $(window).width(),
    slickOptions = {
      slidesToShow: 1,
      slidesToScroll: 1,
      speed: 400,
      prevArrow: $($previous, $sliderControlsCentered),
      nextArrow: $($next, $sliderControlsCentered),
      centerMode: true,
      mobileFirst: true,
      variableWidth: true,
      centerPadding: "25px",
      responsive: [
        {
          breakpoint: 992,
          settings: {
            centerPadding: "90px",
          },
        },
      ],
    };

  var sliderControls = function (currWindowWidth) {
    var progressBarWidth;

    $sliderControlsCentered.css({
      width: $(".community-carousel .slider-item").outerWidth(),
    });
    if (currWindowWidth >= 992) {
      progressBarWidth =
        $sliderControlsCentered.width() -
        ($next.outerWidth() + $previous.outerWidth());
    } else {
      progressBarWidth = $sliderControlsCentered.width();
    }
    $progressBarCentered.css({
      width: progressBarWidth,
    });
  };

  $sliderCentered.on(
    "beforeChange",
    function (event, slick, currentSlide, nextSlide) {
      var calc = (nextSlide / (slick.slideCount - 1)) * 100;
      $progressBarCentered
        .css("background-size", calc + "% 100%")
        .attr("aria-valuenow", calc);
      $progressBarLabelCentered.text(calc + "% completed");
    }
  );
  if ($(window).outerWidth() > 992) {
    $(".video-placeholder").css("height", $(".first img").height());
    $(".desk-video").css("height", $(".first img").height());
  } else {
    $(".video-placeholder").css(
      "height",
      $(".community-carousel__item--image img").height()
    );
    $(".mob-video").css(
      "height",
      $(".community-carousel__item--image img").height()
    );
  }
  $(window).on("orientationchange", function () {
    if ($(window).outerWidth() < 993) {
      $sliderCentered.not(".slick-initialized").slick(slickOptions);
      sliderControls(currWindowWidth);
      $(".video-placeholder").css(
        "height",
        $(".community-carousel__item--image img").height()
      );
      $(".mob-video").css(
        "height",
        $(".community-carousel__item--image img").height()
      );
      sliderControls(currWindowWidth);
    } else {
      $(".video-placeholder").css("height", $(".first img").height());
      $(".desk-video").css("height", $(".first img").height());
    }
    setTimeout(function () {
      if ($(window).outerWidth() < 993) {
        sliderControls(currWindowWidth);
        $(".video-placeholder").css(
          "height",
          $(".community-carousel__item--image img").height()
        );
        $(".mob-video").css(
          "height",
          $(".community-carousel__item--image img").height()
        );
      } else {
        $(".video-placeholder").css("height", $(".first img").height());
        $(".desk-video").css("height", $(".first img").height());
      }
    }, 200);
  });
  $(window).on("load resize", function () {
    if ($(window).outerWidth() < 993) {
      $sliderCentered.not(".slick-initialized").slick(slickOptions);
      sliderControls(currWindowWidth);
      $(".video-placeholder").css(
        "height",
        $(".community-carousel__item--image img").height()
      );
      $(".mob-video").css(
        "height",
        $(".community-carousel__item--image img").height()
      );
      sliderControls(currWindowWidth);
    } else {
      $(".video-placeholder").css("height", $(".first img").height());
      $(".desk-video").css("height", $(".first img").height());
    }
    setTimeout(function () {
      if ($(window).outerWidth() < 993) {
        sliderControls(currWindowWidth);
        $(".video-placeholder").css(
          "height",
          $(".community-carousel__item--image img").height()
        );
        $(".mob-video").css(
          "height",
          $(".community-carousel__item--image img").height()
        );
      } else {
        $(".video-placeholder").css("height", $(".first img").height());
        $(".desk-video").css("height", $(".first img").height());
      }
    }, 200);
  });

  var _diffBlock = $(".cultural-benefit .d-none.d-sm-block");
  var _diffBlockCTA = $(".differentiator-block-more__cta");
  var _blockmoreWrap = $(".differentiator-block-more");
  $(".differentiator-block-more").on("click", function () {
    _diffBlock.removeClass("d-none");
    _diffBlockCTA.addClass("hidden");
    _blockmoreWrap.addClass("hidden");
  });
  $("#openModal").css("opacity", 0);
  // var bg = '../../..' + $('#openModal').attr('data-BG');
  var bg = $("#openModal").attr("data-BG");
  $("#openModal").css("background-image", "url(" + bg + ")");
  $("#openModal").css("opacity", 1);
  $("#openModalMob").css("opacity", 0);
  // var bgMob = '../../..' + $('#openModalMob').attr('data-BG');
  var bgMob = $("#openModalMob").attr("data-BG");
  $("#openModalMob").css("background-image", "url(" + bgMob + ")");
  $("#openModalMob").css("opacity", 1);
  $("#culturalBenefitVideoModal").on("hidden.bs.modal", function () {
    $(this).find("video").get(0).pause();
    $(this).find("video").get(1).pause();
  });
  $("#culturalBenefitVideoModal").on("shown.bs.modal", function () {
    if ($(window).width() < 993) {
      $(this).find(".mob-video").get(0).play();
    } else {
      $(this).find(".desk-video").get(0).play();
    }
  });
};

$(document).ready(function () {
  if ($(".cultural-benefit").length) {
    dcu.site.culturalBenefit();
  }
  if (document.getElementById("openModal") != null) {
    document.getElementById("openModal").addEventListener("click", function () {
      $(".image-tile-video").attr("style", "display: none");
      $("#thevideo-desk-video").attr("style", "display: block");
      var video = document.getElementsByClassName("desk-video")[0];
      video.play();
    });
  }
  if (document.getElementById("openModalMob") != null) {
    document
      .getElementById("openModalMob")
      .addEventListener("click", function () {
        $(".image-tile-video").attr("style", "display: none");
        $video = $(".community-carousel").find("#thevideo-mob-video");
        $video.attr("style", "display: block");
        $video.find(".mob-video").get(0).play();
      });
  }

  $(window).on("orientationchange", function () {
    $video = $(".community-carousel").find("#thevideo-mob-video");
    if ($(window).outerWidth() < 993 && $(window).outerHeight() >= 1024) {
      $video.find(".mob-video").get(0).pause();
      var vid = $video.find(".mob-video").get(0).currentTime;
      if (vid != 0) {
        $("#thevideo-desk-video").attr("style", "display: block");
        document.getElementsByClassName("desk-video")[0].currentTime = vid;
        document.getElementsByClassName("desk-video")[0].play();
      }
    } else if (
      $(window).outerWidth() >= 1024 &&
      $(window).outerHeight() < 993
    ) {
      document.getElementsByClassName("desk-video")[0].pause();
      var vid = document.getElementsByClassName("desk-video")[0].currentTime;
      if (vid != 0) {
        $(".community-carousel")
          .find(".slick-slider")
          .slick(
            "slickGoTo",
            $video.closest(".slider-item").data("slick-index")
          );
        $video.attr("style", "display: block");
        $video.find(".mob-video").get(0).currentTime = vid;
        $video.find(".mob-video").get(0).play();
      }
    }
  });
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.combinationList = function () {
  var _combinationBlock = $(".bank-Services .d-none.d-sm-block");
  var _combinationBlockCTA = $(".bank-Services--more__cta");
  var _blockmoreWrap = $(".bank-Services--more");
  $(".bank-Services--more").on("click", function () {
    _combinationBlock.removeClass("d-none");
    _combinationBlockCTA.addClass("hidden");
    _blockmoreWrap.removeClass("d-block");
    _blockmoreWrap.addClass("hidden");
  });
};
$(document).ready(function () {
  if ($(".bank-Services").length) {
    dcu.site.combinationList();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.awards = function () {
  var setTitleHeight = function () {
    $(".accolades--award h4").each(function (index, item) {
      $(item).removeAttr("style");
    });
    var maxHeight = -1;
    $(".accolades--award h4").each(function () {
      var height = $(this).height();
      maxHeight = height > maxHeight ? height : maxHeight;
    });
    $(".accolades--award h4").each(function (index, item) {
      $(item).height(maxHeight);
    });
  };
  if ($(window).outerWidth() > 720) {
    setTitleHeight();
  }
  $(window).on("resize orientationchange", function () {
    if ($(window).outerWidth() > 720) {
      setTitleHeight();
    } else {
      $(".accolades--award h4").each(function (index, item) {
        $(item).removeAttr("style");
      });
    }
  });
};

$(document).ready(function () {
  if ($(".accolades").length) {
    dcu.site.awards();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.careerBenefits = function () {
  var _benefitsBlock = $(".carrer-benefits .d-none.d-sm-block");
  var _benefitsBlockCTA = $(".carrer-benefits--more__cta");
  var _blockmoreWrap = $(".carrer-benefits--more");
  $(".carrer-benefits--more").on("click", function () {
    _benefitsBlock.removeClass("d-none");
    _benefitsBlockCTA.addClass("hidden");
    _blockmoreWrap.removeClass("d-block");
    _blockmoreWrap.addClass("hidden");
  });
  $("[id=videoModal]").on("hidden.bs.modal", function () {
    $(this).find("video").get(0).pause();
  });
  $("[id=videoModal]").on("shown.bs.modal", function () {
    $(this).find("video").get(0).play();
  });
  $(".carrer-benefits--video__link").on("click", function (e) {
    e.preventDefault();
  });
};
$(document).ready(function () {
  if ($(".carrer-benefits").length) {
    dcu.site.careerBenefits();
  }
});
("use strict");
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.threeColumnSetTile = function () {
  var currWindowWidth = $(window).width(),
    setCardHeight = function (currWindowWidth) {
      var threeColumnTile = $(".three-column-tile");
      threeColumnTile.each(function () {
        var _this = $(this),
          cardTitleHeightArr = [],
          cardCaptionArr = [],
          cardDescription = _this.find(
            ".three-column-tile__card--caption__text"
          ),
          cardTitle = _this.find(".three-column-tile__card--caption__title"),
          cardCaption = _this.find(".three-column-tile__card--caption"),
          maxTitleHeight,
          maxCaptionHeight;

        cardTitle.css("height", "auto");

        if (currWindowWidth >= 720) {
          cardTitle.each(function () {
            cardTitleHeightArr.push(parseInt($(this).height()));
          });
          maxTitleHeight = Math.max.apply(null, cardTitleHeightArr);
          cardTitle.css("height", maxTitleHeight);

          if (cardDescription.length) {
            cardCaption.css("height", "auto");
            cardCaption.each(function () {
              cardCaptionArr.push(parseInt($(this).outerHeight()));
            });
            maxCaptionHeight = Math.max.apply(null, cardCaptionArr);
            cardCaption.css("height", maxCaptionHeight);
          }
        }
      });
    };
  setCardHeight(currWindowWidth);
  $(window).on("resize", function () {
    currWindowWidth = $(window).width();
    setCardHeight(currWindowWidth);
  });
};

$(document).ready(function () {
  if ($(".three-column-tile").length) {
    dcu.site.threeColumnSetTile();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.calculators = function () {
  var URL, scriptTag, languageAttr, srcAttr, typeAttr;

  if (document.location.href.substring(0, 5) === "https") {
    URL = "https://";
  } else {
    URL = "http://";
  }
  URL +=
    "www.TimeValueCalculators.com/timevaluecalculators/includes/calculators_script.js";
  scriptTag = "SCRIPT ";
  languageAttr = 'LANGUAGE="JavaScript" ';
  srcAttr = "SR" + 'C="' + URL + '" '; //split for DNN

  document.write(
    "<" + scriptTag + languageAttr + srcAttr + "></" + scriptTag + ">"
  );
};

$(document).ready(function () {
  var calculatorItems = $(".calculators--items");
  if (calculatorItems.length) {
    //dcu.site.calculators();

    dcu.site.generateComponentDynamicId(calculatorItems, true, false);
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.offerings = function () {
  var offeringsItem = $(".auto-plp-offerings__items");
  dcu.site.generateComponentDynamicId(offeringsItem, true, false);
};
$(document).ready(function () {
  if ($(".auto-plp-offerings").length) {
    dcu.site.offerings();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.careerGrowth = function () {
  var careerGrowthAccordion = $(".career-growth__accordion");
  dcu.site.generateComponentDynamicId(careerGrowthAccordion, true, false);
};
$(document).ready(function () {
  if ($(".career-growth").length) {
    dcu.site.careerGrowth();
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.calculators = function (calcAccordionId) {
  var urlParameters = $(calcAccordionId).attr("data-url-params");
  if (urlParameters.indexOf("?")) {
    urlParameters = urlParameters.replace("?", "&");
  } else {
    urlParameters = urlParameters;
  }
  dcu.site.calculators.callAjax(calcAccordionId, urlParameters, false);
};
dcu.site.calculators.callAjax = function (
  calcAccordionId,
  urlParameters,
  secondload
) {
  var parameters;
  if (!secondload) {
    parameters = "TEMPLATE_ID=www.dcu.org_2&CALCULATORID=" + urlParameters;
  } else {
    parameters = urlParameters;
  }
  $.ajax({
    type: "GET",
    url: "/bin/dcu/tcalcCalculator",
    data: parameters,
    success: function (data, textStatus, jqXHR) {
      var type = type || "text";
      if (type == "html" || type == "text") {
        data = data
          .replace(/<script.*?>*?<\/script>/, "")
          .replace(/<link.*?>/, "")
          .replace(
            /href=\"javascript:toggleLayerVisibility(.*?)\"/g,
            'href="javascript:void(0)" class="finance-calculator-show-hide"'
          );
      }
      $(calcAccordionId).empty();
      if (data.indexOf("unspecified server error occurred") != -1) {
        dcu.site.calculators(calcAccordionId);
      } else {
        $(calcAccordionId).append(data);
        $(calcAccordionId + " #calculator").removeAttr("onsubmit");
        //$(calcAccordionId+" #COMPUTE").attr("onclick","");
        $(calcAccordionId + ' input[type="submit"]').attr("onclick", "");
        $(calcAccordionId + " #calculator").submit(function (event) {
          event.preventDefault();
        });
        var CalculatorTips = $(calcAccordionId + " #DIVCalculatorTips");
        var CalculatorDisclaimer = $(
          calcAccordionId + " #DIVCalculatorDisclaimer"
        );
        var CalculatorResultsDetail = $(
          calcAccordionId + " #DIVCalculatorResultsDetail"
        );

        $(
          "#AmortizableLoansTable table tr:nth-child(2) td, #RevolvingAccountsTable table tr:nth-child(2) td"
        ).attr("colspan", "2");
        $("#tvcDetailTable1[summary] table").addClass("altered");
        $(CalculatorTips).hide();
        $(CalculatorDisclaimer).hide();
        var removeLnk = $(CalculatorDisclaimer)
          .next()
          .find("a")
          .attr(
            "href",
            "https://www.timevalue.com/tcalc-financial-calculators"
          );
        removeLnk.attr("onclick", "").attr("target", "_blank");
        $(CalculatorResultsDetail).hide();
      }
    },
    error: function (XMLHttpRequest, textStatus, errorThrown) {
      console.log("Error in Ajax call");
    },
  });
};
$(document).on("click", "a.finance-calculator-show-hide", function () {
  event.preventDefault();
  $(this).parent().next().toggle();
});

$(document).ready(function () {
  if ($(".calculator").length > 0) {
    var compCalc = $(".calculator .financial-calculator");

    compCalc.each(function () {
      var id = $(this).attr("id");
      id = id + "_" + generateRandom();
      $(this).attr("id", id);
      var calcId = "#" + id;
      $(calcId + " .embed-responsive").each(function () {
        var accordId = $(this).attr("id");
        accordId = accordId + "_" + generateRandom();
        $(this).attr("id", accordId);
        var calcAccordionId = "#" + accordId;
        dcu.site.calculators(calcAccordionId);
      });
      $(calcId + " .calculators--items__title").each(function () {
        var randomId = generateRandom();
        var accordTarget = $(this).attr("data-target");
        accordTarget = accordTarget + "_" + randomId;
        $(this).attr("data-target", accordTarget);
        $(this).next().attr("id", $(this).attr("data-target").replace("#", ""));
      });
    });

    function generateRandom() {
      var max = 10;
      var random = [];
      for (var i = 0; i < max; i++) {
        var temp = Math.floor(Math.random() * max);
        if (random.indexOf(temp) == -1) {
          random.push(temp);
        } else i--;
      }
      return random.join("");
    }
  }
});

$(document.body).on(
  "keypress click",
  '.financial-calculator input[type="submit"]',
  function (event) {
    var form = $(event.target).closest("form");
    form.find("input[type=text]").each(function () {
      $(this).val($(this).val().replace("%", "").replace("$", ""));
    });
    form.find("input[type=hidden]").each(function () {
      $(this).val($(this).val().replace("%", "").replace("$", ""));
    });

    var processParameters =
      $(form).serialize() +
      "&" +
      $(this).attr("id") +
      "=" +
      $(this).attr("value");
    var calcId = "#" + $(form).closest(".embed-responsive").attr("id");
    dcu.site.calculators.callAjax(calcId, processParameters, true);
  }
);

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.discountPrescriptionCard = function (cardId) {
  $(cardId + " #prescriptionform").validate({
    debug: false,
    rules: {
      firstname: {
        required: true,
        noSpam: true,
      },
      lastname: {
        required: true,
        noSpam: true,
      },
      email: {
        required: false,
        email: true,
      },
    },
    messages: {
      firstname: {
        required: "Required",
        noSpam: "No links or images",
      },
      lastname: {
        required: "Required",
        noSpam: "No links or images",
      },
      email: {
        required: "Required",
        email: "Please enter valid email address",
      },
    },
  });

  $(cardId + ' input[type="reset"]').on("keypress click", function () {
    $(cardId + " #firstname").val("");
    $(cardId + " #lastname").val("");
    $(cardId + " form #email").val("");
  });
  $(cardId + ' input[type="submit"]').on("keypress click", function () {
    $(cardId + " form").submit();
  });
};
$(document).ready(function () {
  if ($(".discountPrescriptionCard").length > 0) {
    var compCalc = $(".discountPrescriptionCard .discount-prescription-card");

    compCalc.each(function () {
      var id = $(this).attr("id");
      id = id + "_" + generateRandom();
      $(this).attr("id", id);
      var cardId = "#" + id;
      dcu.site.discountPrescriptionCard(cardId);
    });

    function generateRandom() {
      var max = 10;
      var random = [];
      for (var i = 0; i < max; i++) {
        var temp = Math.floor(Math.random() * max);
        if (random.indexOf(temp) == -1) {
          random.push(temp);
        } else i--;
      }
      return random.join("");
    }
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.dcuvideos = function (videoCompId) {
  $(videoCompId + " img").on("keypress click", function (e) {
    var videoURL = $(this).attr("data-url");
    var videoTitle = $(this).next().text();
    var videoTranscript = $(this).parent().find(".transcript").html();
    $("#videoModal-dcu").find(".modal-title").html(videoTitle);
    $("#videoModal-dcu")
      .find(".transcript-text-scroll")
      .find(".text-left")
      .html(videoTranscript);
    $("#videoModal-dcu")
      .find("iframe")
      .attr("src", videoURL + "?autoplay=1");
  });
  $("#videoModal-dcu").on("hidden.bs.modal", function (e) {
    $(this).find("iframe").attr("src", "#");
  });
};

$(document).ready(function () {
  if ($(".dcuvideo").length > 0) {
    var videoComp = $(".dcu-video-container");

    videoComp.each(function () {
      var id = $(this).attr("id");
      id = id + "_" + generateRandom();
      $(this).attr("id", id);
      var videoCompId = "#" + id;
      dcu.site.dcuvideos(videoCompId);
    });
    function generateRandom() {
      var max = 10;
      var random = [];
      for (var i = 0; i < max; i++) {
        var temp = Math.floor(Math.random() * max);
        if (random.indexOf(temp) == -1) {
          random.push(temp);
        } else i--;
      }
      return random.join("");
    }
  }
});

var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.bvReviews = function () {
  var $reviewsPage = $(".bv-reviews");
  var productId = $(".bv-reviews .container").data("productid");
  if (productId && !window.BV) {
    setTimeout(function () {
      var bvUrl = $reviewsPage.data("bvurl");
      $.getScript(bvUrl, function () {});
    }, 200);
  }
};
window.onload = function () {
  var counter = 0;
  var BVTimer = setInterval(function () {
    if (
      $('#bazaarVoice [data-bv-show="questions"] #BVQASearchContainer').length >
      0
    ) {
      clearInterval(BVTimer);
      if (
        $('#bazaarVoice [data-bv-show="questions"] #BVQASearchContainer')
          .length === 1
      ) {
        if ($(".sticky-navbar__dropdown__menu--item").length === 2) {
          var prodQaId = $(".sticky-navbar__dropdown__menu--item a")
            .last()
            .attr("href")
            .replace(/#/, "");
          $('#bazaarVoice [data-bv-show="questions"]').attr("id", prodQaId);
        }
      } else {
        $(".sticky-navbar__dropdown__menu--item:last").remove();
      }
    } else {
      counter++;
      if (counter === 10) {
        clearInterval(BVTimer);
      }
    }
  }, 500);
};

$(document).ready(function () {
  if ($(".bv-reviews").length) {
    dcu.site.bvReviews();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.listcomponent = function () {
  $(".remove-list-li li").each(function () {
    var $this = $(this);
    $this.html($this.html().replace(/&nbsp;/g, ""));
    var $el = $(this);
    if ($.trim($el.html()) == "") {
      $el.remove();
    }
  });
};
$(document).ready(function () {
  if ($(".list").length) {
    dcu.site.listcomponent();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.ratetypecard = function () {
  $(".close_me").on("click", function () {
    $(this).parent().parent().css({ opacity: "0", "z-index": "0" });
  });
  $(".dcu-rate-card .rateType-disclosure").on("click", function () {
    var targetDiv = $(this)
      .parent()
      .parent()
      .parent()
      .find(".col-sm-12.disclosure");
    if ($(targetDiv).css("opacity") == 0)
      $(targetDiv).css({ opacity: "1", "z-index": "2" });
    else $(targetDiv).css({ opacity: "0", "z-index": "0" });
  });
};
$(document).ready(function () {
  if ($(".dcu-rate-card").length) {
    dcu.site.ratetypecard();
  }
});

var dcu = dcu || {};
dcu.article = dcu.article || {};
dcu.article.promoBox = function (target) {
  $(".close_me").on("click", function () {
    $(this).parent().parent().css({ opacity: "0", "z-index": "0" });
  });

  $(".promobox-disclosure").on("click", function () {
    var targetDiv = $(this).parent().parent().parent().find(".disclosure");

    if ($(targetDiv).css("opacity") == 0)
      $(targetDiv).css({ opacity: "1", "z-index": "2" });
    else $(targetDiv).css({ opacity: "0", "z-index": "0" });
  });
};

$(document).ready(function () {
  "use strict";
  if ($(".promoBox").length) {
    dcu.article.promoBox();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.calcXml = function () {
  $(document.body).on(
    "keypress click",
    '#calc-xml button[type="submit"]',
    function (event) {
      event.preventDefault();
      var targetcontainer;
      if (!$(".validationMessage").is(":visible")) {
        var params = {};
        var url = $("#calc-xml").attr("data-pageUrl-val") + ".json";
        var form = $(event.target).closest("form");
        params["calcId"] = $(".calctype").attr("data-url-val");
        var value;
        form.find("input , select").each(function (index) {
          if (this.type == "text") {
            value = $(this)
              .val()
              .replace("%", "")
              .replace("$", "")
              .replace(",", "");
            if ($(this).attr("data-type") == "decimal") {
              value = value / 100;
            }
            params[this.id] = value;
          }
          if (this.type == "radio" && this.checked) {
            value = $(this)
              .val()
              .replace("%", "")
              .replace("$", "")
              .replace(",", "");
            params[this.id] = value;
          }
        });
        if (url != undefined && url != "" && url != null) {
          $.ajax({
            type: "POST",
            url: "/bin/dcu/calcxml",
            data: params,
            success: function (response) {
              $("#calc-xml .results").remove();
              $("#calc-xml #result h3").remove();
              $("#calc-xml .Summary table").remove();
              if (
                response.responseText != undefined &&
                response.responseText != null &&
                response.responseText != ""
              ) {
                if (response.monthlyPayment == "$.00") {
                  var resultText = "<h3>$0.00<span>/mo</span></h3>";
                } else {
                  var resultText =
                    "<h3>" + response.monthlyPayment + "<span>/mo</span></h3>";
                }
                $("#calc-xml #result").append(resultText);
                var tabledata =
                  "<div class='schedule-container' align='center'><table ><tr>";
                if (response.year.length > 0) {
                  tabledata =
                    tabledata +
                    "<th>Month </th><th> Beginning Balance </th><th> Interest</th><th> Payment</th><th> Ending Balance </th></tr>";
                }
                for (var i = 0; i < response.year.length; i++) {
                  var obj = response.year[i];
                  tabledata = tabledata + "<tr>";
                  var inTable = "";
                  for (var key in obj) {
                    var objVal = obj[key].toString();
                    if (key != "period" && objVal.indexOf("$") == -1) {
                      objVal = "$" + obj[key].toString();
                    }
                    inTable = inTable + "<td>" + objVal + "</td>";
                  }
                  tabledata = tabledata + inTable;
                  tabledata = tabledata + "</tr>";
                }
                tabledata = tabledata + "</tr></table></div>";
                $("#calc-xml .schedule-container").remove();
                $("#calc-xml .Summary").append(tabledata);
                $("#calc-xml .show-payment").on("click", function () {
                  var panel = $(this).closest("#panel_results");
                  panel.addClass("payment-schedule");
                  $(this)
                    .closest("#panel_results")
                    .find("#sticky-div")
                    .addClass("sticky-2");
                  $(this).next("div").show();
                  $(this)
                    .closest("#panel_results")
                    .find(".close_schedule")
                    .show();

                  if ($(panel).hasClass("payment-schedule")) {
                    var topheight = 150;
                    if ($(".sticky-navbar").length > 0) {
                      topheight = 190;
                    }
                    $("html, body").animate(
                      {
                        scrollTop: panel.offset().top - topheight,
                      },
                      500
                    );
                  }
                });

                $("#calc-xml .close_schedule").on("click", function () {
                  $(this)
                    .closest("#panel_results")
                    .removeClass("payment-schedule");
                  $(this)
                    .closest("#panel_results")
                    .find("#sticky-div")
                    .removeClass("sticky-2");
                  $(this).hide();
                  $(".schedule-container").removeAttr("style");
                });
              }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
              console.log("Error in Ajax call", textStatus);
            },
          });
        }
        targetcontainer = $(this).closest("#calc-xml").find("#panel_results");
        targetcontainer.show();
      } else {
        targetcontainer = $(this).closest("#calc-xml").find("#panel_results");
        targetcontainer.hide();
      }
    }
  );
};

$(document).ready(function () {
  "use strict";
  if ($(".calculator-calcxml").length) {
    dcu.site.calcXml();
  }
});
function removeErrorMessage(id) {
  $("#" + id)
    .parent()
    .find(".validationMessage")
    .remove();
}
function validateCalc(id, allowedChar, min, max) {
  var inputValue = $("#" + id)
    .val()
    .trim();
  var regex;
  var errorMsgVal = false;
  var i = parseInt(inputValue, 10);

  if (allowedChar == "%") {
    regex = new RegExp(/^\+?[0-9(%),.-]+$/);
  } else if (allowedChar == "$") {
    regex = new RegExp(/^\+?[0-9($),.-]+$/);
  } else {
    regex = new RegExp(/^\+?[0-9(),.-]+$/);
  }
  if (
    inputValue == "" ||
    inputValue.replace("%", "").replace("$", "").replace(",", "") == ""
  ) {
    errorMsgVal = true;
  } else if (!inputValue.match(regex)) {
    errorMsgVal = true;
  } else if (min > i || i > max) {
    errorMsgVal = true;
  } else if ((id == "termMonths") & !inputValue.match(new RegExp(/^[0-9]*$/))) {
    errorMsgVal = true;
  }
  if (errorMsgVal) {
    $("#" + id)
      .parent()
      .find(".validationMessage")
      .remove();
    var uniqueMessage = "";
    if (id == "purchasePrice") {
      uniqueMessage = "Please enter a purchase price ex: $35,000.00";
    }
    if (id == "cashRebate") {
      uniqueMessage = "If a rebate is not available, please enter 0";
    }
    if (id == "tradeIn") {
      uniqueMessage = "If a trade-in value is not known, please enter 0.";
    }
    if (id == "tradeInOwed") {
      uniqueMessage = "If an amount owed is not available, please enter 0.";
    }
    if (id == "downPayment") {
      uniqueMessage = "If there is no down payment, please enter 0.";
    }
    if (id == "termMonths") {
      uniqueMessage =
        "Please enter loan terms - in months - between 1 and 360.";
    }
    if (id == "interestRate") {
      uniqueMessage =
        "Please enter a percentage value between " +
        min +
        " and " +
        max +
        " percent";
    }
    $("#" + id).after(
      "<span class='validationMessage' style='color:red;'>" +
        uniqueMessage +
        "</span>"
    );
  } else {
    $("#" + id)
      .parent()
      .find(".validationMessage")
      .remove();
  }
}
dcu.site = dcu.site || {};
dcu.site.tabbedInterface = function (target) {
  if ($(window).outerWidth() < 721) {
    if (
      $("#" + target)
        .parent()
        .closest(".cmp-tabs").length <= 0
    ) {
      var target_text = $(
        "#" + target + ".tab-variation-one li.cmp-tabs__tab--active:first"
      ).text();
      $(
        "#" +
          target +
          ".tab-variation-one .tab-variation-one-desk-none p.trigger-tabs"
      ).text(target_text);
      $("#" + target + " ol.dropdown-menu-open li").on("click", function (e) {
        e.stopImmediatePropagation();
        if (
          $(this).parent().parent().parent().closest(".cmp-tabs").length <= 0 &&
          $(window).outerWidth() < 721
        ) {
          $(this).parent().slideUp("fast");
          var text_swap = $(this).text();
          var ptag = $(this).parent().parent().find("p.trigger-tabs");
          var theOverlay = $(this).parent().next();
          var theArrow = $(this)
            .parent()
            .siblings(".trigger-wrapper")
            .find(".arrow");
          theOverlay.toggleClass("show");
          theArrow.toggleClass("open");
          ptag.fadeOut(function () {
            ptag.text(text_swap).fadeIn();
          });
        }
      });
    } else {
      $("#" + target + " .tab-variation-one-desk-none").hide();
      $("#" + target + " .tab-variation-one-desk-none")
        .next()
        .next()
        .removeClass("dropdown-menu-open");
    }
  }
  $("#" + target + ".tab-variation-one p.trigger-tabs").on(
    "click",
    function (e) {
      e.stopImmediatePropagation();
      var elementsId = $(this).parent().parent().attr("id");
      $("#" + elementsId + " ol:first").slideToggle("fast");
      var theOverlay = $(this).parent().siblings(".transparent-overlay");
      var theArrow = $(this).next();
      theOverlay.toggleClass("show");
      theArrow.toggleClass("open");
    }
  );
};

$(document).ready(function () {
  "use strict";
  if ($(".dcuTabs").length) {
    var dcuTabs = $(".dcuTabs .cmp-tabs");
    $(window).on("load resize orientationchange", function () {
      dcuTabs.each(function (index) {
        var id = $(this).attr("id");
        dcu.site.tabbedInterface(id);
      });
    });
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};
dcu.site.calculatorCalcXml = function () {
  loadCal();
  $(".multiCal ul.sub-tabs li").on("click", function (e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var tab_id = $(this).attr("class");
    var text_swap = $(this).text();
    var target_el = $(this).parent().parent().find("h2").find("span");
    var theTrigger = $(this).parent().parent().find("span").find("span");
    theTrigger.toggleClass("triggered");
    $(this).parent().slideToggle("fast");
    if ($(this).hasClass("active")) {
      return false;
    } else {
      $(this).siblings().removeClass("active");
      $(this).addClass("active");
    }
    loadCal();
  });
  $(".multiCal .menu-triggerd").on("click", function (e) {
    e.stopImmediatePropagation();
    var $this = $(this);
    var theTarget = $this.find("span");
    var showMenu = $(".multiCal .sub-tabs");
    theTarget.toggleClass("triggered");
    showMenu.slideToggle("fast");
  });
  $(document).on("click", ".calculate", function (e) {
    var $selected = $(".calc-dropdown").find("li.active");
    var buttonText = $selected.attr("data-buttonText");
    var buttonUrl = $selected.attr("data-buttonurl");
    var linknewTab = $selected.attr("data-linkNewTab");
    if (
      buttonUrl != undefined &&
      buttonUrl != null &&
      buttonUrl != "" &&
      buttonText != null &&
      buttonText != "" &&
      buttonText != undefined
    ) {
      var theButton = $(
        '<a class="promo-primary second-cta" target="' +
          linknewTab +
          '" href="' +
          buttonUrl +
          '" title="' +
          buttonText +
          '" id="promo-primary-button">' +
          buttonText +
          "</a>"
      );
      var theButton1 = $(
        '<a class="promo-cta" target="' +
          linknewTab +
          '" href="' +
          buttonUrl +
          '" title="' +
          buttonText +
          '" id="promo-primary-button">' +
          buttonText +
          "</a>"
      );
      setTimeout(function () {
        $("#promo-primary-button").remove();
        var theTarget;
        if (
          $("#results").find(".results-summary .results-total .resultText")
            .length == 1
        ) {
          theTarget = $("#results")
            .find(".results-summary")
            .find(".results-total")
            .find(".resultText");
          $(theButton).insertAfter(theTarget);
        } else if (
          $("#results").find(".results-summary .results-total .resultText")
            .length == 0
        ) {
          theTarget = $("#results").find(".btnLine .pure-u-1");
          $(theTarget).append(theButton1);
        } else {
          theTarget = $("#results").find(
            ".results-summary .results-total .resultText:last"
          );
          $(theButton).insertAfter(theTarget);
        }
      }, 3000);
    }
  });
};

function loadCal() {
  var $selected = $(".calc-dropdown").find("li.active");
  var title = $selected.text();
  var description = $selected.attr("data-description");
  var desclaimer = $selected.attr("data-desclaimer");
  var calculatorId = $selected.attr("data-calculatorId");
  $(".calcTitle").text(title);
  if (description != undefined && description != null && description != "") {
    $(".calc-description").text(description);
  } else {
    $(".calc-description").text("");
  }
  if (desclaimer != undefined && desclaimer != null && desclaimer != "") {
    $(".cal-disclaimer").html(desclaimer);
  } else {
    $(".cal-disclaimer").empty();
  }
  if (calculatorId != undefined && calculatorId != null && calculatorId != "") {
    var url =
      "https://www.calcxml.com/scripts/loadCalc.js?calcTarget=" +
      calculatorId +
      "&embed=2&skn=807";
    $.ajax({
      url: url,
      async: false,
      dataType: "script",
    }).done(function (data) {
      setTimeout(function () {
        var div = $(".calc-container");
        if (
          description == undefined ||
          description == null ||
          description == ""
        ) {
          var desc = $(".calcDescription").text();
          $(".calc-description").text(desc);
        }
        if (desclaimer == undefined || desclaimer == null || desclaimer == "") {
          var disc = $(".disclaimer").html();
          $(".cal-disclaimer").html(disc);
        }
        $("#calc").css("display", "block");
      }, 1000);
    });
  }
}

$(document).ready(function () {
  if ($(".multical").length) {
    dcu.site.calculatorCalcXml();
  }
});
var dcu = dcu || {};
dcu.site = dcu.site || {};

dcu.site.dcuRateTable = function () {
  $(".close_me").on("click", function () {
    $(this).parent().parent().css({ opacity: "0", "z-index": "0" });
  });

  $(".dcu-rate-table .rateType-disclosure").on("click", function () {
    var targetDiv = $(this)
      .parent()
      .parent()
      .parent()
      .find(".col-sm-12.disclosure");
    if ($(targetDiv).css("opacity") == 0)
      $(targetDiv).css({ opacity: "1", "z-index": "2" });
    else $(targetDiv).css({ opacity: "0", "z-index": "0" });
  });
};

dcu.site.publishedDate = function () {
  var date = new Date();
  var months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];
  var publishedDate =
    months[date.getMonth()] +
    " " +
    date.getDate() +
    "," +
    " " +
    date.getFullYear();
  $(".current_date").append(" " + publishedDate);
};

$(document).ready(function () {
  if ($(".dcuRateTable").length) {
    dcu.site.dcuRateTable();
    if ($(".current_date").length) {
      dcu.site.publishedDate();
    }
  }
});
